{
    "version": "https://jsonfeed.org/version/1",
    "title": "RubyHolic",
    "home_page_url": "http://localhost:4000/",
    "feed_url": "http://localhost:4000/feed.json",
    "description": "Ketika menjadi Ruby Developer",
    "icon": "http://localhost:4000/apple-touch-icon.png",
    "favicon": "http://localhost:4000/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "Ali",
        "url": "www.situsali.id",
        "avatar": null
    },
    
"items": [
    
        {
            "id": "http://localhost:4000/install-rails-v7-di-termux",
            "title": "Install Rails v7 di Termux",
            "summary": null,
            "content_text": "Udah lama banget saya gak update mengenai hal-hal yang berbau Ruby atau Rails. Mengingat sudah 2 tahun saya gak ngoding Rails.Biar gak lupa saya menyempatkan ngoding Rails dikit-dikit di termux di HP saya yg jelek ini :(Oke langsung aja.Buka termux dan pasang beberapa paket kebutuhan development berikut:Sebelum pasang sebaiknya kamu update dulu package termux mu.pkg update &amp;&amp; pkg upgradeSetelah itu baru pasang dependensinya.pkg install ruby clang make binutils pkg-config libxsltNah, setelah itu kita pasang nokigiri disuaikan dengan device HP kita. (Ini udah pernah saya jelasin dulu pas install Rails 6 di Termux)gem install nokogiri --platform=ruby -- --use-system-librariesNah baru deh kita pasang railsnya.gem install railsBikin project Rails mu.rails new blogTunggu sampai selesai proses instalasinya dan pastinya nanti akan error. Kok gitu?Ini karena gem tzinfo-data yang ada di default Gemfile di Rails tidak memasang khusus untuk device HP. (Ini juga pernah saya jelasin di artikel install Rails 6).Jadi kamu cuma perlu edit di Gemfile untuk tzinfo-data seperti berikut:gem \"tzinfo-data\"Save dan Ketik bundle install.bundle installBeres kamu bisa ngoding rails di HP, buakakak ðŸ¤£LimitasiKarena kamu pasang Railsnya di Termux di HP ya jelas banget pasti ada limitasinya.Selama ini yang saya temukan cuma dua:      Kamu gak bisa pasang database selain sqlite. Kalau nekat pingin pake database semisal postgresql kamu perlu server, jadi kamu jalankan melalui remote database.        Kamu gak bisa pasangan tailwind-rails (ini bentuknya executable). Kalau kamu mau pake tailwind, harap pasang lewat package nodejs saja.  ",
            "content_html": "<p>Udah lama banget saya gak update mengenai hal-hal yang berbau Ruby atau Rails. Mengingat sudah 2 tahun saya gak ngoding Rails.</p><p>Biar gak lupa saya menyempatkan ngoding Rails dikit-dikit di termux di HP saya yg jelek ini :(</p><p>Oke langsung aja.</p><p>Buka termux dan pasang beberapa paket kebutuhan development berikut:</p><p>Sebelum pasang sebaiknya kamu update dulu package termux mu.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pkg update <span class=\"o\">&amp;&amp;</span> pkg upgrade</code></pre></div></div><p>Setelah itu baru pasang dependensinya.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pkg <span class=\"nb\">install </span>ruby clang make binutils pkg-config libxslt</code></pre></div></div><p>Nah, setelah itu kita pasang nokigiri disuaikan dengan device HP kita. (Ini udah pernah saya jelasin dulu pas install Rails 6 di Termux)</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"nb\">install </span>nokogiri <span class=\"nt\">--platform</span><span class=\"o\">=</span>ruby <span class=\"nt\">--</span> <span class=\"nt\">--use-system-libraries</span></code></pre></div></div><p>Nah baru deh kita pasang railsnya.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"nb\">install </span>rails</code></pre></div></div><p>Bikin project Rails mu.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails new blog</code></pre></div></div><p>Tunggu sampai selesai proses instalasinya dan pastinya nanti akan error. Kok gitu?</p><p>Ini karena gem <code class=\"highlighter-rouge\">tzinfo-data</code> yang ada di default Gemfile di Rails tidak memasang khusus untuk device HP. (Ini juga pernah saya jelasin di artikel install Rails 6).</p><p>Jadi kamu cuma perlu edit di Gemfile untuk tzinfo-data seperti berikut:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem \"tzinfo-data\"</code></pre></div></div><p>Save dan Ketik bundle install.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>bundle <span class=\"nb\">install</span></code></pre></div></div><p>Beres kamu bisa ngoding rails di HP, buakakak ðŸ¤£</p><h2 id=\"limitasi\">Limitasi</h2><p>Karena kamu pasang Railsnya di Termux di HP ya jelas banget pasti ada limitasinya.</p><p>Selama ini yang saya temukan cuma dua:</p><ol>  <li>    <p>Kamu gak bisa pasang database selain sqlite. Kalau nekat pingin pake database semisal postgresql kamu perlu server, jadi kamu jalankan melalui remote database.</p>  </li>  <li>    <p>Kamu gak bisa pasangan tailwind-rails (ini bentuknya executable). Kalau kamu mau pake tailwind, harap pasang lewat package nodejs saja.</p>  </li></ol>",
            "url": "http://localhost:4000/install-rails-v7-di-termux",
            
            
            
            "tags": ["ruby","termux","rails7"],
            
            "date_published": "2023-10-19T20:55:00+07:00",
            "date_modified": "2023-10-19T20:55:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/termux-baru-masalah-baru-buat-ruby",
            "title": "Termux Baru Masalah Baru Buat Ruby",
            "summary": null,
            "content_text": "Jadi kemarin niatnya kan saya mau bersih-bersih isi Termux, karena dirasa udah banyak sampah bejibun di sana. Maklum dulu buat coba-coba dan udah 2 tahun gak diutak-atik itu Termux.Biasalah, kalau di Android cara paling gampang bersih-bersih ya lewat clear cache dari application info.Namun masalah baru timbul setelah clear cache. Pertama, saya baru tau kalau Termux di PlayStore udah deprecated sejak tanggal 20 November 2020.Jadi kalau kita mau pake versi terbaru cuma ada di F-Droid. Alasannya karena Android 10 mewajibkan aplikasinya memakai SDK minimal versi 29.Intinya sih, karena SDK baru bikin ngebreak si Termux shellnya jadi gak jalan. Makanya gak dilanjutin pengembangannya di PlayStore. Ente bisa baca-baca di sini https://www.xda-developers.com/termux-terminal-linux-google-play-updates-stopped/Padahal waktu di versi PlayStore saya udah beli Termux Styling eh sekarang malah gak bisa jalan, rugi deh wkwkwkw.Gak juga sih, saya beli karena emang support developernya. Soalnya adanya Termux, saya bener-bener terbantu.Akhirnya saya pasang Termux dari F-Droid. Di sana juga udah ada Termux Styling gratis pula, jadi bisa langsung pake.Kenapa sih saya butuh Termux Styling? Krena saya butuh warna-warna biar keliatan gak kek heker gitu yg cuma sukanya item-putih doang wkwkwk.Juga saya butuh font JetBrains Mono, ini font biasa saya pake di desktop, cakep dan support ligatures. Jadi tetep keren meskipun ngoding di Neovim, gak kalah deh sama IDE hehehe.Bisa aja sih tanpa Termux Styling, toh cuma edit konfigurasinya di directory ~/.termux. Tapi saya males, pake aja yang udah mudah wkwkwk.Nah Termux udah dipasang udah saya setup juga sesuai dengan konfigurasi yang biasa saya pake buat ngoding.Biasa deh cuma masang, tmux, neovim, git, openssh, build-essetial, rbenv, nodejs, dan postgresql. Kamaren-kemaren saya tambahin juga php dan mariadb sih, cuma sekarang enggak. Termux saya pake buat ngoding ruby aja.Dari sini semua gak ada masalah, namun muncul ketika saya meng-compile Ruby 3 dari rbenv. Yakni error gak bisa dicompile. Gak tau ini masalahnya di mana, padahal dependensi sudah saya install.Sebelum di clear cache itu Termux bisa Ruby 3 di pasang, kenapa sekarang malah jadi gak bisa wkwkkw. Saya pikir ini masalah di rbenv. Yaudah saya coba pindah ke rvm.Kenapa pindah ke rvm? Biasanya rvm nyediain versi binarynya, kalaupun gak ada ia otomatis compile dari source Ruby dengan dipasangin dependensinya otomatis.Tapinya tetep gak bisa lewat rvm, baru mau download dependensi udah ditolak.Oh iya, Termux yang baru juga sudah menghilangkan paket-paket yang berakhiran -dev. Semua dijadiin satu dengan paketnya. Contoh kamu mau install libssl, biasanya ada dipake libssl-dev tapi sekarang cukup pasang libssl aja karena versi devnya sudah termasuk.Beruntung kebetulan ruby versi 3 ada direpository Termux, saya pasang ruby dari repo aja gak dari rbenv atau rvm. Yuhuuu.. senengnya â€¦Tapi kesenangan berakhir, masalah baru lagi muncul pas saya mau pasang Rails dan Jekyll, yakni gak bisa compile gems saasc, nokogiri, dan lain-lain pokoknya gems yang pake compile dah. Semuanya gak bisa dicompile.Hemat saya ini bukan karena dependensinya gak ada, tapi karena pembatasan dari Android 10. Haduh, kecewa deh.Tapi alhamdulillah nih, masih ada aplikasi AnLinux, yakni GNU/Linux minimal yang bisa dipasang di Termux.Deskripsi aplikasinya Run Linux on Android Without Root Access.Keliatanya asik nih, saya emang males banget ngeroot HP, soalnya ribet tar sama aplikasi banking wkwkwk.AnLinux isinya cuma bash script, yang mana ia nge-chroot si rootfs nya Linux. Jadi Linux versi arm, dijalanin dari Termux. Bagus sih, intinya masih ada harapan buat saya pasang kebutuh ngoding Ruby di Termux.Di AnLinux kita bisa pilih berbagai macam distro GNU/Linux yang nanti mau dijalanin. Saya pasang Ubuntu aja biar gak ribet. Tadinya mau pasang ArchLinux tapi nanti aja deh. Yang penting kebutuhan ngoding ruby saya lancar dulu.Alhamdulilah berkat adanya AnLinux semuanya udah beres sekarang. Jadi bisa ngoding lagi deh wkwkwkw",
            "content_html": "<p>Jadi kemarin niatnya kan saya mau bersih-bersih isi Termux, karena dirasa udah banyak sampah <em>bejibun</em> di sana. Maklum dulu buat coba-coba dan udah 2 tahun gak diutak-atik itu Termux.</p><p>Biasalah, kalau di Android cara paling gampang bersih-bersih ya lewat <code class=\"highlighter-rouge\">clear cache</code> dari application info.</p><p>Namun masalah baru timbul setelah <code class=\"highlighter-rouge\">clear cache</code>. Pertama, saya baru tau kalau Termux di PlayStore udah deprecated sejak tanggal 20 November 2020.</p><p>Jadi kalau kita mau pake versi terbaru cuma ada di F-Droid. Alasannya karena Android 10 mewajibkan aplikasinya memakai SDK minimal versi 29.</p><p>Intinya sih, karena SDK baru bikin ngebreak si Termux shellnya jadi gak jalan. Makanya gak dilanjutin pengembangannya di PlayStore. Ente bisa baca-baca di sini <a href=\"https://www.xda-developers.com/termux-terminal-linux-google-play-updates-stopped/\">https://www.xda-developers.com/termux-terminal-linux-google-play-updates-stopped/</a></p><p>Padahal waktu di versi PlayStore saya udah beli <code class=\"highlighter-rouge\">Termux Styling</code> eh sekarang malah gak bisa jalan, rugi deh wkwkwkw.</p><p>Gak juga sih, saya beli karena emang support developernya. Soalnya adanya Termux, saya bener-bener terbantu.</p><p>Akhirnya saya pasang Termux dari F-Droid. Di sana juga udah ada Termux Styling gratis pula, jadi bisa langsung pake.</p><p>Kenapa sih saya butuh Termux Styling? Krena saya butuh warna-warna biar keliatan gak kek heker gitu yg cuma sukanya item-putih doang wkwkwk.</p><p>Juga saya butuh font <code class=\"highlighter-rouge\">JetBrains Mono</code>, ini font biasa saya pake di desktop, cakep dan support ligatures. Jadi tetep keren meskipun ngoding di Neovim, gak kalah deh sama IDE hehehe.</p><p>Bisa aja sih tanpa Termux Styling, toh cuma edit konfigurasinya di directory <code class=\"highlighter-rouge\">~/.termux</code>. Tapi saya males, pake aja yang udah mudah wkwkwk.</p><p>Nah Termux udah dipasang udah saya setup juga sesuai dengan konfigurasi yang biasa saya pake buat ngoding.</p><p>Biasa deh cuma masang, <code class=\"highlighter-rouge\">tmux</code>, <code class=\"highlighter-rouge\">neovim</code>, <code class=\"highlighter-rouge\">git</code>, <code class=\"highlighter-rouge\">openssh</code>, <code class=\"highlighter-rouge\">build-essetial</code>, <code class=\"highlighter-rouge\">rbenv</code>, <code class=\"highlighter-rouge\">nodejs</code>, dan <code class=\"highlighter-rouge\">postgresql</code>. Kamaren-kemaren saya tambahin juga <code class=\"highlighter-rouge\">php</code> dan <code class=\"highlighter-rouge\">mariadb</code> sih, cuma sekarang enggak. Termux saya pake buat ngoding ruby aja.</p><p>Dari sini semua gak ada masalah, namun muncul ketika saya meng-compile Ruby 3 dari rbenv. Yakni error gak bisa dicompile. Gak tau ini masalahnya di mana, padahal dependensi sudah saya install.</p><p>Sebelum di clear cache itu Termux bisa Ruby 3 di pasang, kenapa sekarang malah jadi gak bisa wkwkkw. Saya pikir ini masalah di rbenv. Yaudah saya coba pindah ke <code class=\"highlighter-rouge\">rvm</code>.</p><p>Kenapa pindah ke rvm? Biasanya rvm nyediain versi binarynya, kalaupun gak ada ia otomatis compile dari source Ruby dengan dipasangin dependensinya otomatis.</p><p>Tapinya tetep gak bisa lewat rvm, baru mau download dependensi udah ditolak.</p><p>Oh iya, Termux yang baru juga sudah menghilangkan paket-paket yang berakhiran <code class=\"highlighter-rouge\">-dev</code>. Semua dijadiin satu dengan paketnya. Contoh kamu mau install <code class=\"highlighter-rouge\">libssl</code>, biasanya ada dipake <code class=\"highlighter-rouge\">libssl-dev</code> tapi sekarang cukup pasang <code class=\"highlighter-rouge\">libssl</code> aja karena versi devnya sudah termasuk.</p><p>Beruntung kebetulan ruby versi 3 ada direpository Termux, saya pasang ruby dari repo aja gak dari rbenv atau rvm. Yuhuuu.. senengnya â€¦</p><p>Tapi kesenangan berakhir, masalah baru lagi muncul pas saya mau pasang Rails dan Jekyll, yakni gak bisa compile gems <code class=\"highlighter-rouge\">saasc</code>, <code class=\"highlighter-rouge\">nokogiri</code>, dan lain-lain pokoknya gems yang pake compile dah. Semuanya gak bisa dicompile.</p><p>Hemat saya ini bukan karena dependensinya gak ada, tapi karena pembatasan dari Android 10. Haduh, kecewa deh.</p><p>Tapi alhamdulillah nih, masih ada aplikasi <code class=\"highlighter-rouge\">AnLinux</code>, yakni GNU/Linux minimal yang bisa dipasang di Termux.Deskripsi aplikasinya <code class=\"highlighter-rouge\">Run Linux on Android Without Root Access</code>.</p><p>Keliatanya asik nih, saya emang males banget ngeroot HP, soalnya ribet tar sama aplikasi banking wkwkwk.</p><p>AnLinux isinya cuma bash script, yang mana ia nge-<code class=\"highlighter-rouge\">chroot</code> si rootfs nya Linux. Jadi Linux versi arm, dijalanin dari Termux. Bagus sih, intinya masih ada harapan buat saya pasang kebutuh ngoding Ruby di Termux.</p><p>Di AnLinux kita bisa pilih berbagai macam distro GNU/Linux yang nanti mau dijalanin. Saya pasang Ubuntu aja biar gak ribet. Tadinya mau pasang ArchLinux tapi nanti aja deh. Yang penting kebutuhan ngoding ruby saya lancar dulu.</p><p>Alhamdulilah berkat adanya AnLinux semuanya udah beres sekarang. Jadi bisa ngoding lagi deh wkwkwkw</p>",
            "url": "http://localhost:4000/termux-baru-masalah-baru-buat-ruby",
            
            
            
            "tags": ["ruby","termux","curhat"],
            
            "date_published": "2021-12-25T13:26:00+07:00",
            "date_modified": "2021-12-25T13:26:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/menjalankan-aplikasi-rails-6-dengan-puma-dan-nginx",
            "title": "Menjalankan Aplikasi Rails 6 dengan Puma dan Nginx",
            "summary": null,
            "content_text": "Pertama-tama kita sunting berkas config/puma.rb:## letakan app_dir paling atasapp_dir = File.expand_path '../..', __FILE__### untuk bind bebas mau ditaru di mana pun, yang terpenting sesudah app_dirbind ENV.fetch(\"SOCKETFILE\") { \"unix://#{app_dir}/tmp/sockets/puma.sock\" }Kemudian buat service file menggunakan systemd:$ sudo touch /etc/systemd/system/puma.service$ sudo vim /etc/systemd/system/puma.serviceIsi konfigurasi Puma dengan Systemd:[unit]Description=Puma Rails ServerAfter=network.target[Service]Type=simpleUser=userEnvironment=RAILS_ENV=productionEnvironment=SECRET_KEY_BASE=$(BUNDLE_GEMFILE=/home/user/my_rails_app/Gemfile bundle exec rake -f /home/user/my_rails_app/Rakefile secret)WorkingDirectory=/home/user/my_rails_app/ExecStart=/home/user/.rbenv/shims/puma -C /home/user/my_rails_app/config/puma.rbExecStop=/home/user/.rbenv/shims/puma -S /home/user/my_rails_app/config/puma.rbPIDFile=/home/user/my_rails_app/tmp/pids/server.pidTimeoutSec=15Restart=always[Install]WantedBy=multi-user.targetSetelah selesai, tinggal kita reload dan jalankan puma -nya.$ sudo systemctl daemon-reload$ sudo systemctl start puma.service$ sudo systemctl status pumaUntuk konfigurasi Nginx:upstream app {    server unix:///home/user/my_rails_app/tmp/sockets/puma.sock;}server {    listen 80;    listen [::]:80;    server_name my-rails-app.com;    root /home/user/my_rails_app/public/;    location / {        try_files $uri @app;    }    location @app {        proxy_pass http://app;        proxy_set_header  Host $host;        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_set_header  X-Forwarded-Proto $scheme;        proxy_set_header  X-Forwarded-Ssl off; # change to \"on\" if https        proxy_set_header  X-Forwarded-Port $server_port;        proxy_set_header  X-Forwarded-Host $host;        proxy_redirect off;    }}",
            "content_html": "<p>Pertama-tama kita sunting berkas <code class=\"highlighter-rouge\">config/puma.rb</code>:</p><div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">## letakan app_dir paling atas</span><span class=\"n\">app_dir</span> <span class=\"o\">=</span> <span class=\"no\">File</span><span class=\"p\">.</span><span class=\"nf\">expand_path</span> <span class=\"s1\">'../..'</span><span class=\"p\">,</span> <span class=\"kp\">__FILE__</span><span class=\"c1\">### untuk bind bebas mau ditaru di mana pun, yang terpenting sesudah app_dir</span><span class=\"n\">bind</span> <span class=\"no\">ENV</span><span class=\"p\">.</span><span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"s2\">\"SOCKETFILE\"</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"s2\">\"unix://</span><span class=\"si\">#{</span><span class=\"n\">app_dir</span><span class=\"si\">}</span><span class=\"s2\">/tmp/sockets/puma.sock\"</span> <span class=\"p\">}</span></code></pre></div></div><p>Kemudian buat <em>service file</em> menggunakan <code class=\"highlighter-rouge\">systemd</code>:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo touch</span> /etc/systemd/system/puma.service<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>vim /etc/systemd/system/puma.service</code></pre></div></div><p>Isi konfigurasi Puma dengan Systemd:</p><div class=\"language-ini highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[unit]</span><span class=\"py\">Description</span><span class=\"p\">=</span><span class=\"s\">Puma Rails Server</span><span class=\"py\">After</span><span class=\"p\">=</span><span class=\"s\">network.target</span><span class=\"nn\">[Service]</span><span class=\"py\">Type</span><span class=\"p\">=</span><span class=\"s\">simple</span><span class=\"py\">User</span><span class=\"p\">=</span><span class=\"s\">user</span><span class=\"py\">Environment</span><span class=\"p\">=</span><span class=\"s\">RAILS_ENV=production</span><span class=\"py\">Environment</span><span class=\"p\">=</span><span class=\"s\">SECRET_KEY_BASE=$(BUNDLE_GEMFILE=/home/user/my_rails_app/Gemfile bundle exec rake -f /home/user/my_rails_app/Rakefile secret)</span><span class=\"py\">WorkingDirectory</span><span class=\"p\">=</span><span class=\"s\">/home/user/my_rails_app/</span><span class=\"py\">ExecStart</span><span class=\"p\">=</span><span class=\"s\">/home/user/.rbenv/shims/puma -C /home/user/my_rails_app/config/puma.rb</span><span class=\"py\">ExecStop</span><span class=\"p\">=</span><span class=\"s\">/home/user/.rbenv/shims/puma -S /home/user/my_rails_app/config/puma.rb</span><span class=\"py\">PIDFile</span><span class=\"p\">=</span><span class=\"s\">/home/user/my_rails_app/tmp/pids/server.pid</span><span class=\"py\">TimeoutSec</span><span class=\"p\">=</span><span class=\"s\">15</span><span class=\"py\">Restart</span><span class=\"p\">=</span><span class=\"s\">always</span><span class=\"nn\">[Install]</span><span class=\"py\">WantedBy</span><span class=\"p\">=</span><span class=\"s\">multi-user.target</span></code></pre></div></div><p>Setelah selesai, tinggal kita <em>reload</em> dan jalankan <code class=\"highlighter-rouge\">puma</code> -nya.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl daemon-reload<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl start puma.service<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl status puma</code></pre></div></div><p>Untuk konfigurasi Nginx:</p><div class=\"language-nginx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">upstream</span> <span class=\"s\">app</span> <span class=\"p\">{</span>    <span class=\"kn\">server</span> <span class=\"s\">unix:///home/user/my_rails_app/tmp/sockets/puma.sock</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"k\">server</span> <span class=\"p\">{</span>    <span class=\"kn\">listen</span> <span class=\"mi\">80</span><span class=\"p\">;</span>    <span class=\"kn\">listen</span> <span class=\"s\">[::]:80</span><span class=\"p\">;</span>    <span class=\"kn\">server_name</span> <span class=\"s\">my-rails-app.com</span><span class=\"p\">;</span>    <span class=\"kn\">root</span> <span class=\"n\">/home/user/my_rails_app/public/</span><span class=\"p\">;</span>    <span class=\"kn\">location</span> <span class=\"n\">/</span> <span class=\"p\">{</span>        <span class=\"kn\">try_files</span> <span class=\"nv\">$uri</span> <span class=\"s\">@app</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"kn\">location</span> <span class=\"s\">@app</span> <span class=\"p\">{</span>        <span class=\"kn\">proxy_pass</span> <span class=\"s\">http://app</span><span class=\"p\">;</span>        <span class=\"kn\">proxy_set_header</span>  <span class=\"s\">Host</span> <span class=\"nv\">$host</span><span class=\"p\">;</span>        <span class=\"kn\">proxy_set_header</span>  <span class=\"s\">X-Forwarded-For</span> <span class=\"nv\">$proxy_add_x_forwarded_for</span><span class=\"p\">;</span>        <span class=\"kn\">proxy_set_header</span>  <span class=\"s\">X-Forwarded-Proto</span> <span class=\"nv\">$scheme</span><span class=\"p\">;</span>        <span class=\"kn\">proxy_set_header</span>  <span class=\"s\">X-Forwarded-Ssl</span> <span class=\"no\">off</span><span class=\"p\">;</span> <span class=\"c1\"># change to \"on\" if https</span>        <span class=\"kn\">proxy_set_header</span>  <span class=\"s\">X-Forwarded-Port</span> <span class=\"nv\">$server_port</span><span class=\"p\">;</span>        <span class=\"kn\">proxy_set_header</span>  <span class=\"s\">X-Forwarded-Host</span> <span class=\"nv\">$host</span><span class=\"p\">;</span>        <span class=\"kn\">proxy_redirect</span> <span class=\"no\">off</span><span class=\"p\">;</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "http://localhost:4000/menjalankan-aplikasi-rails-6-dengan-puma-dan-nginx",
            
            
            
            "tags": ["rails6","puma","nginx"],
            
            "date_published": "2020-08-03T16:38:00+07:00",
            "date_modified": "2020-08-03T16:38:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/install-rails-6-di-termux",
            "title": "Install Rails 6 di Termux",
            "summary": null,
            "content_text": "Saya pernah bilang dipostingan sebelumnya bahwa di Termux kita tidak bisa memasang rails 6. Dikarenakan ada dependensi yang harus di-compile, yakni saasc dan nokogirii. Termux gagal meng-compile dependensi tersebut. Akibatnya rails 6 tidak bisa dijalankan.Sejak hadir Ruby 2.7.1, entah mengapa dependensi tersebut berhasil di-compile. Ini bukan magic! Yang ada saya tidak tahu cara kerjanya ðŸ˜…Sebelum memulai pastikan kalian sudah memasang git, rbenv dan Ruby 2.7.1.Kalau sudah, kita tinggal pasang dependensi berikut untuk proses compile pada gem source.pkg install make clang libxml2 pkg-config libxslt yarn sqlite postgresqlKemudian pasang gem berikut:gem install nokogiri -- --use-system-librariesgem install sassc -- --use-system-librariesNah baru deh dipasang rails-nya.gem install -N railsTerakhir test buat project.rails new blogBiasanya akan terjadi galat. Mengapa? karena di Termux tidak terdapat tzinfo-data.Kita tinggal sunting saja Gemfilenya.vim GemfileTambahkan gem berikut di akhir baris.gem tzinfo-datagem tzinfoLalu bundle ulang.bundle",
            "content_html": "<p>Saya pernah bilang dipostingan sebelumnya bahwa di Termux kita tidak bisa memasang rails 6. Dikarenakan ada dependensi yang harus di-compile, yakni <code class=\"highlighter-rouge\">saasc</code> dan <code class=\"highlighter-rouge\">nokogirii</code>. Termux gagal meng-compile dependensi tersebut. Akibatnya rails 6 tidak bisa dijalankan.</p><p>Sejak hadir Ruby 2.7.1, entah mengapa dependensi tersebut berhasil di-compile. Ini bukan magic! Yang ada saya tidak tahu cara kerjanya ðŸ˜…</p><p>Sebelum memulai pastikan kalian sudah memasang <code class=\"highlighter-rouge\">git</code>, <code class=\"highlighter-rouge\">rbenv</code> dan Ruby 2.7.1.</p><p>Kalau sudah, kita tinggal pasang dependensi berikut untuk proses compile pada gem source.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pkg <span class=\"nb\">install </span>make clang libxml2 pkg-config libxslt yarn sqlite postgresql</code></pre></div></div><p>Kemudian pasang gem berikut:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"nb\">install </span>nokogiri <span class=\"nt\">--</span> <span class=\"nt\">--use-system-libraries</span>gem <span class=\"nb\">install </span>sassc <span class=\"nt\">--</span> <span class=\"nt\">--use-system-libraries</span></code></pre></div></div><p>Nah baru deh dipasang rails-nya.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> rails</code></pre></div></div><p>Terakhir test buat project.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails new blog</code></pre></div></div><p>Biasanya akan terjadi galat. Mengapa? karena di Termux tidak terdapat <code class=\"highlighter-rouge\">tzinfo-data</code>.</p><p>Kita tinggal sunting saja Gemfilenya.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>vim Gemfile</code></pre></div></div><p>Tambahkan gem berikut di akhir baris.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem tzinfo-datagem tzinfo</code></pre></div></div><p>Lalu bundle ulang.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>bundle</code></pre></div></div>",
            "url": "http://localhost:4000/install-rails-6-di-termux",
            
            
            
            "tags": ["rails6","termux"],
            
            "date_published": "2020-07-06T18:58:00+07:00",
            "date_modified": "2020-07-06T18:58:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/migrasi-sprokets-ke-webpacker",
            "title": "Migrasi Sprockets ke Webpacker",
            "summary": null,
            "content_text": "Saya senang sekali webpacker telah hadir secara default di rails 6 sebagai penanganan web assets. Dengan hadirnya webpacker kita bisa menggeser untuk tidak menggunakan sprockets. Meski demikian, kita bisa menggunakan keduanya secara bersamaan.Ketika kalian menggunakan rails 6 dan membuat project dengan menggunakan perintah:rails new your_projectPerintah di atas, sudah menyertakan webpacker sebagai penangan js dan sprockets sebagai penanganan css dan image.Bagi saya cukup boros mengunakan dua engine untuk menangani masalah assets. Padahal cukup menggunakan webpacker, itu sudah bisa semua.Kalau kalian baru memulai membuat project di rails 6. Saya menyarankan gunakan perintah:rails new your_project --skip-sprocketsBagimana yang sudah terlanjur menggunakan dua engine webpacker dan sprockets di rails? Atau tidak menggunakan rails 6 namun ingin pakai webpacker?Nah, tulisan inilah saya mencoba berbagi berdasarkan pengalaman saat migrasi dari sprockets menuju webpacker.Penggunan Rails 5 atau ke bawahDi mulai dari para penggunakan rails &lt;= 5. Pertama-tama kalian pasang dulu gem webpacker di GemFile.gem 'webpacker'Lalu pasang webpacker tersebut pada rails.bundlerails webpacker:installKemudian kalian ubah skrip javascript_include_tag menjadi javascript_pack_tag di view/layouts. Begitu juga untuk stylesheet_include_tag ganti menjadi stylesheet_pack_tag.o- javascript_include_tag+ javascript_pack_tag- stylesheet_include_tag+ stylesheet_pack_tagDengan mengubah skrip di atas, seharusnya tampilan web kalian menjadi berantakan. Karena css dan js bawaan sprockets tidak di load.Terakhir, buat berkas application.js di direktori app/javascript/packs.mkdir -p app/javascript/packstouch application.jsSusunan berkasnya seperti berikut:app/javascript: â””â”€â”€ packs:   â””â”€â”€ application.jsTest Pastikan Webpacker sudah berjalanNah untuk memastikan webpacker sudah berjalan atau belum kalian bisa mengetesnya dengan skrip sederhana berikut yang terletak pada app/javascript/packs/application.js:console.log('Hello world from Webpacker');Kalau sudah terlihat di browser, selamat webpacker sudah terpasang baik di rails kalian!Konfigurasi WebpackerSebelum bermigrasi, adakalanya kita mesti konfigurasi dulu webpacker-nya.Langkah pertama ialah, rename direktori app/javascript menjadi app/webpacker. Karena kita ingin semua assets ditangani oleh webpacker maka direktori javascript diubah menjadi webpacker.Sebetulnya, tidak di-rename juga tidak apa-apa. Namun menurut saya itu tidak bagus. Karena di dalam direktori tersubut, nantinya kita juga akan memasukan css, images, fonts, dan berkas aset lainnya selain js. Makanya lebih baik diganti namanya menjadi webpacker.Untuk mengubahnya kalian ubah pada berkas config/webpacker.ymlvim config/webpacker.ymlsourch_path: app/webpackerextract_css: trueSetelah itu buat direktori seperti berikut:app/webpacker:â”œâ”€â”€ fontsâ”œâ”€â”€ imagesâ”œâ”€â”€ packsâ”‚  â””â”€â”€ application.jsâ””â”€â”€ src   â”œâ”€â”€ javascripts   â””â”€â”€ stylesheetsdengan perintah:mkdir -p {fonts,images,src/javascripts,src/stylessheets}Dengan susunan direktori seperti di atas. Kalian dapat memindahkan semua css/scss ke app/webpacker/src/stylessheets begitu juga dengan js, pindahkan semua ke app/webpacker/src/javascriptsMigrasi CSS/SCSSSetelah melakukan konfigurasi pada webpacker. Langkah selanjutnya kita pindahkan semua css/scss ke app/webpacker/src/stylessheets.Jika sudah, kita import css/scss terusebut di packs/application.jsvim app/webpacker/packs/application.jsimport \"bulma\"import \"../src/stylessheets/my_css\"Tanpa perlu extention, webpacker sudah langsung otomatis tau.Kalian bisa perhatikan cara import baris pertama dan kedua berbeda. Mengapa bisa beda? Karena baris pertama di dapat dari node_modules yakni dengan perintah:yarn add bulmaMenggunakan application.scss (Optional)Cara di atas, kita meng-import berkas stylesheets dari js. Sebetulnya kita juga bisa menggunakan berkas di packs/application.scss.Caranya pun hampir sama. Pertama buat dulu berkasnya.touch app/webpacker/packs/application.scssLalu kalian tinggal import seperti ini:@import '~bulma/scss/bulma';@import '../src/stylesheets/my_css';Nah untuk baris pertama, caranya beda lagi. Kalau kita ingin import dari node_modules di scss, ditambah tilda ~ untuk meng-import berkas-berkas yang bersumber dari node_modules.Migrasi JavascriptSetelah semua stylesheet dipindakan. Selanjutnya berkas js juga dipindahkan.Nah, caranya juga sama. Tinggal import lagi di packs/application.jsvim app/webpacker/packs/application.jsimport \"bulma\"import \"../src/javascript/my_script\"Migrasi ImagesUntuk berkas gambar. Kalian masukan di webpacker/images.Dan sunting packs/application.js nya menjadirequire.context('../images', true);Jangan lupa. Ganti semua skrip yang menggunakan asset_path menjadi image_pack_path. - asset_path('icon.png') + image_pack_path('icon.png')Jika dalam berkas stylesheet (css/scss) kalian ada yang meng-import gambar. Lakukan seperti contoh di bawah:  .google-icon {-   background-image: image-url('btn_google_dark.svg');+   background-image: url('../images/btn_google_dark.svg');  }Tanda minus berarti diapus dan tanda plus berarti digantikan.Migrasi FontsNah ini bagian terakhir dari sesi pemindahan. Sama seperti diberkas lainnya. Kalian mesti memindahkannya di app/webpacker/fontsDan jangan lupa ganti discript stylesheets kalian:@font-face { font-family: YourFontFamily; src: url('../fonts/yourfile.ttf') format('truetype');}Hapus Sprockets Hingga Keakar-akarnya!Kalian sudah memindahkan seluruh assets ke webpacker. Namun, itu semua belum sepenuhnya migrasi. Kita masih tetap bisa menggunakan sprockets.Kalau kalian ingin menghapus hingga keakar-akarnya. Kalian perlu melakukan ini:      Buang gem sass-rails.    Hapus atau beri comment sass-rails dari GemFile     # gem 'sass-rails'         bundle            Hapus require \"sprockets/railtie\" dari config/application.rb.     # require \"sprockets/railtie\"            Hapus config.assets.* dari dua file development.rb dan production.rb dari config/environment.     cd config/environment vim development.rb vim production.rb        Kode yang dihapus     config.assets.debug = true config.assets.quiet = true        Hapus file config/initializers/assets.rb.  (Optional) Hapus direktori app/assets.Test it!Langkah terakhir, yakni tes! Kalian bisa lakukan perintah berikut:rails assets:precompileKalau tidak terjadi error berarti kalian sudah sukses mengapus sprockets dari rails kalian!Semoga bermanfaat :)",
            "content_html": "<p>Saya senang sekali webpacker telah hadir secara default di rails 6 sebagai penanganan web assets. Dengan hadirnya webpacker kita bisa menggeser untuk tidak menggunakan sprockets. Meski demikian, kita bisa menggunakan keduanya secara bersamaan.</p><p>Ketika kalian menggunakan rails 6 dan membuat project dengan menggunakan perintah:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails new your_project</code></pre></div></div><p>Perintah di atas, sudah menyertakan webpacker sebagai penangan <code class=\"highlighter-rouge\">js</code> dan sprockets sebagai penanganan <code class=\"highlighter-rouge\">css</code> dan <code class=\"highlighter-rouge\">image</code>.</p><p>Bagi saya cukup boros mengunakan dua engine untuk menangani masalah assets. Padahal cukup menggunakan webpacker, itu sudah bisa semua.</p><p>Kalau kalian baru memulai membuat project di rails 6. Saya menyarankan gunakan perintah:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails new your_project --skip-sprockets</code></pre></div></div><p>Bagimana yang sudah terlanjur menggunakan dua engine webpacker dan sprockets di rails? Atau tidak menggunakan rails 6 namun ingin pakai webpacker?</p><p>Nah, tulisan inilah saya mencoba berbagi berdasarkan pengalaman saat migrasi dari sprockets menuju webpacker.</p><h2 id=\"penggunan-rails-5-atau-ke-bawah\">Penggunan Rails 5 atau ke bawah</h2><p>Di mulai dari para penggunakan rails &lt;= 5. Pertama-tama kalian pasang dulu gem webpacker di GemFile.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem 'webpacker'</code></pre></div></div><p>Lalu pasang webpacker tersebut pada rails.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>bundlerails webpacker:install</code></pre></div></div><p>Kemudian kalian ubah skrip <code class=\"highlighter-rouge\">javascript_include_tag</code> menjadi <code class=\"highlighter-rouge\">javascript_pack_tag</code> di <code class=\"highlighter-rouge\">view/layouts</code>. Begitu juga untuk <code class=\"highlighter-rouge\">stylesheet_include_tag</code> ganti menjadi <code class=\"highlighter-rouge\">stylesheet_pack_tag</code>.o</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>- javascript_include_tag+ javascript_pack_tag- stylesheet_include_tag+ stylesheet_pack_tag</code></pre></div></div><p>Dengan mengubah skrip di atas, seharusnya tampilan web kalian menjadi berantakan. Karena css dan js bawaan sprockets tidak di load.</p><p>Terakhir, buat berkas <code class=\"highlighter-rouge\">application.js</code> di direktori <code class=\"highlighter-rouge\">app/javascript/packs</code>.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> app/javascript/packs<span class=\"nb\">touch </span>application.js</code></pre></div></div><p>Susunan berkasnya seperti berikut:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>app/javascript: â””â”€â”€ packs:   â””â”€â”€ application.js</code></pre></div></div><h2 id=\"test-pastikan-webpacker-sudah-berjalan\">Test Pastikan Webpacker sudah berjalan</h2><p>Nah untuk memastikan webpacker sudah berjalan atau belum kalian bisa mengetesnya dengan skrip sederhana berikut yang terletak pada <code class=\"highlighter-rouge\">app/javascript/packs/application.js</code>:</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Hello world from Webpacker</span><span class=\"dl\">'</span><span class=\"p\">);</span></code></pre></div></div><p>Kalau sudah terlihat di browser, selamat webpacker sudah terpasang baik di rails kalian!</p><h2 id=\"konfigurasi-webpacker\">Konfigurasi Webpacker</h2><p>Sebelum bermigrasi, adakalanya kita mesti konfigurasi dulu webpacker-nya.</p><p>Langkah pertama ialah, rename direktori <code class=\"highlighter-rouge\">app/javascript</code> menjadi <code class=\"highlighter-rouge\">app/webpacker</code>. Karena kita ingin semua assets ditangani oleh webpacker maka direktori javascript diubah menjadi webpacker.</p><p>Sebetulnya, tidak di-rename juga tidak apa-apa. Namun menurut saya itu tidak bagus. Karena di dalam direktori tersubut, nantinya kita juga akan memasukan css, images, fonts, dan berkas aset lainnya selain js. Makanya lebih baik diganti namanya menjadi webpacker.</p><p>Untuk mengubahnya kalian ubah pada berkas <code class=\"highlighter-rouge\">config/webpacker.yml</code></p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>vim config/webpacker.yml</code></pre></div></div><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sourch_path: app/webpackerextract_css: true</code></pre></div></div><p>Setelah itu buat direktori seperti berikut:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>app/webpacker:â”œâ”€â”€ fontsâ”œâ”€â”€ imagesâ”œâ”€â”€ packsâ”‚  â””â”€â”€ application.jsâ””â”€â”€ src   â”œâ”€â”€ javascripts   â””â”€â”€ stylesheets</code></pre></div></div><p>dengan perintah:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"o\">{</span>fonts,images,src/javascripts,src/stylessheets<span class=\"o\">}</span></code></pre></div></div><p>Dengan susunan direktori seperti di atas. Kalian dapat memindahkan semua css/scss ke <code class=\"highlighter-rouge\">app/webpacker/src/stylessheets</code> begitu juga dengan js, pindahkan semua ke <code class=\"highlighter-rouge\">app/webpacker/src/javascripts</code></p><h2 id=\"migrasi-cssscss\">Migrasi CSS/SCSS</h2><p>Setelah melakukan konfigurasi pada webpacker. Langkah selanjutnya kita pindahkan semua css/scss ke <code class=\"highlighter-rouge\">app/webpacker/src/stylessheets</code>.</p><p>Jika sudah, kita import css/scss terusebut di <code class=\"highlighter-rouge\">packs/application.js</code></p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>vim app/webpacker/packs/application.js</code></pre></div></div><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">bulma</span><span class=\"dl\">\"</span><span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">../src/stylessheets/my_css</span><span class=\"dl\">\"</span></code></pre></div></div><p>Tanpa perlu extention, webpacker sudah langsung otomatis tau.</p><p>Kalian bisa perhatikan cara import baris pertama dan kedua berbeda. Mengapa bisa beda? Karena baris pertama di dapat dari <code class=\"highlighter-rouge\">node_modules</code> yakni dengan perintah:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>yarn add bulma</code></pre></div></div><h3 id=\"menggunakan-applicationscss-optional\">Menggunakan application.scss (Optional)</h3><p>Cara di atas, kita meng-import berkas stylesheets dari js. Sebetulnya kita juga bisa menggunakan berkas di <code class=\"highlighter-rouge\">packs/application.scss</code>.</p><p>Caranya pun hampir sama. Pertama buat dulu berkasnya.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">touch </span>app/webpacker/packs/application.scss</code></pre></div></div><p>Lalu kalian tinggal import seperti ini:</p><div class=\"language-scss highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">@import</span> <span class=\"s1\">'~bulma/scss/bulma'</span><span class=\"p\">;</span><span class=\"k\">@import</span> <span class=\"s1\">'../src/stylesheets/my_css'</span><span class=\"p\">;</span></code></pre></div></div><p>Nah untuk baris pertama, caranya beda lagi. Kalau kita ingin import dari <code class=\"highlighter-rouge\">node_modules</code> di scss, ditambah tilda <code class=\"highlighter-rouge\">~</code> untuk meng-import berkas-berkas yang bersumber dari <code class=\"highlighter-rouge\">node_modules</code>.</p><h2 id=\"migrasi-javascript\">Migrasi Javascript</h2><p>Setelah semua stylesheet dipindakan. Selanjutnya berkas js juga dipindahkan.</p><p>Nah, caranya juga sama. Tinggal import lagi di <code class=\"highlighter-rouge\">packs/application.js</code></p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>vim app/webpacker/packs/application.js</code></pre></div></div><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">bulma</span><span class=\"dl\">\"</span><span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">../src/javascript/my_script</span><span class=\"dl\">\"</span></code></pre></div></div><h2 id=\"migrasi-images\">Migrasi Images</h2><p>Untuk berkas gambar. Kalian masukan di <code class=\"highlighter-rouge\">webpacker/images</code>.</p><p>Dan sunting <code class=\"highlighter-rouge\">packs/application.js</code> nya menjadi</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">context</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">../images</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">);</span></code></pre></div></div><p>Jangan lupa. Ganti semua skrip yang menggunakan <code class=\"highlighter-rouge\">asset_path</code> menjadi <code class=\"highlighter-rouge\">image_pack_path</code>.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> - asset_path('icon.png') + image_pack_path('icon.png')</code></pre></div></div><p>Jika dalam berkas stylesheet (css/scss) kalian ada yang meng-import gambar. Lakukan seperti contoh di bawah:</p><div class=\"language-scss highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nc\">.google-icon</span> <span class=\"p\">{</span><span class=\"na\">-</span><span class=\"err\">   </span><span class=\"nl\">background-image</span><span class=\"p\">:</span> <span class=\"nf\">image-url</span><span class=\"p\">(</span><span class=\"s1\">'btn_google_dark.svg'</span><span class=\"p\">);</span><span class=\"err\">+   </span><span class=\"nl\">background-image</span><span class=\"p\">:</span> <span class=\"sx\">url('../images/btn_google_dark.svg')</span><span class=\"p\">;</span>  <span class=\"p\">}</span></code></pre></div></div><p>Tanda minus berarti diapus dan tanda plus berarti digantikan.</p><h2 id=\"migrasi-fonts\">Migrasi Fonts</h2><p>Nah ini bagian terakhir dari sesi pemindahan. Sama seperti diberkas lainnya. Kalian mesti memindahkannya di <code class=\"highlighter-rouge\">app/webpacker/fonts</code></p><p>Dan jangan lupa ganti discript stylesheets kalian:</p><div class=\"language-scss highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">@font-face</span> <span class=\"p\">{</span> <span class=\"nl\">font-family</span><span class=\"p\">:</span> <span class=\"n\">YourFontFamily</span><span class=\"p\">;</span> <span class=\"nl\">src</span><span class=\"p\">:</span> <span class=\"sx\">url('../fonts/yourfile.ttf')</span> <span class=\"nf\">format</span><span class=\"p\">(</span><span class=\"s1\">'truetype'</span><span class=\"p\">);</span><span class=\"p\">}</span></code></pre></div></div><h2 id=\"hapus-sprockets-hingga-keakar-akarnya\">Hapus Sprockets Hingga Keakar-akarnya!</h2><p>Kalian sudah memindahkan seluruh assets ke webpacker. Namun, itu semua belum sepenuhnya migrasi. Kita masih tetap bisa menggunakan sprockets.</p><p>Kalau kalian ingin menghapus hingga keakar-akarnya. Kalian perlu melakukan ini:</p><ol>  <li>    <p>Buang gem <code class=\"highlighter-rouge\">sass-rails</code>.</p>    <p>Hapus atau beri comment <code class=\"highlighter-rouge\">sass-rails</code> dari GemFile</p>    <div class=\"language-rb highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c1\"># gem 'sass-rails'</span></code></pre></div>    </div>    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> bundle</code></pre></div>    </div>  </li>  <li>    <p>Hapus <code class=\"highlighter-rouge\">require \"sprockets/railtie\"</code> dari <code class=\"highlighter-rouge\">config/application.rb</code>.</p>    <div class=\"language-rb highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c1\"># require \"sprockets/railtie\"</span></code></pre></div>    </div>  </li>  <li>    <p>Hapus <code class=\"highlighter-rouge\">config.assets.*</code> dari dua file <code class=\"highlighter-rouge\">development.rb</code> dan <code class=\"highlighter-rouge\">production.rb</code> dari <code class=\"highlighter-rouge\">config/environment</code>.</p>    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nb\">cd </span>config/environment vim development.rb vim production.rb</code></pre></div>    </div>    <p>Kode yang dihapus</p>    <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> config.assets.debug = true config.assets.quiet = true</code></pre></div>    </div>  </li>  <li>Hapus file <code class=\"highlighter-rouge\">config/initializers/assets.rb</code>.</li>  <li>(Optional) Hapus direktori <code class=\"highlighter-rouge\">app/assets</code>.</li></ol><h2 id=\"test-it\">Test it!</h2><p>Langkah terakhir, yakni tes! Kalian bisa lakukan perintah berikut:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails assets:precompile</code></pre></div></div><p>Kalau tidak terjadi error berarti kalian sudah sukses mengapus sprockets dari rails kalian!</p><p>Semoga bermanfaat :)</p>",
            "url": "http://localhost:4000/migrasi-sprokets-ke-webpacker",
            
            
            
            
            
            "date_published": "2020-06-24T15:44:00+07:00",
            "date_modified": "2020-06-24T15:44:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/rails-101-pembukaan",
            "title": "Rails 101 - Pembukaan",
            "summary": null,
            "content_text": "Tujuan blog ini dibangun adalah untuk belajar menjadi Ruby Developer. Namun, tulisan yang ada saat ini, belum menampilkan tahap belajar. Yang ada hanyalah tahap solusi dari permasalahan. Untuk itu, saya mencoba membuat tulisan mengenai Ruby on Rails secara berurutan. Mulai dari pemasangan hingga tahap pembuatan project.Oleh karena itu, saya menamai Rails 101. Apa itu 101? Intinya adalah belajar dari tingkat dasar hingga mahir. Mengenai pengertian 101 kalian mungkin bisa baca ditautan Wikipedia berikut https://en.wikipedia.org/wiki/101_%28number%29#In_education.Daftar IsiAdapun daftar isi tulisan ini adalah kira-kira sebagai berikut:1. Pembukaan2. Mengenal Bundler dan GemFile   a. Apa itu Bundler?   b. Membuat GemFile   b. Menambahkan Gem3. Cara Pasang Rails   a. Pasang Rails di GNU/Linux   b. Pasang Rails di macOS   c. Pasang Rails di Window   d. Pasang Rails di Android   e. Pasang Rails dengan Versi Berbeda   f. Pasang Rails dengan Database Lain      f.1 Pasang dengan SQLite3      f.2 Pasang dengan PostgreSQL      f.3 Pasang dengan MySQL/Mariadb4. Mengenal struktur direktori di Rails   a. Struktur dasar MVC   b. Mengenal Pewarisan5. Mengenal baris perintah di Rails   a. Membuat Controller dengan baris perintah   b. Membuat Model dengan Baris Perintah   c. Membuat Migration dengan Baris Perintah   d. Membuat Resources dengan Baris Perintah   e. Perintah Rake dan Task-nya6. Mengenal dan Memahami Route   a. Membuat Route sederhana   b. Membuat Route untuk Resources   c. Mengenal Scope, Trait dan Namespace7. Mengenal ActiveRecord sebagai Model di Rails   a. Macam-Macam Validasi di Model   b. Macam-Macam Callback di Model   c. Menganl dan Memahami Reference di Model      c.1 Pemodelan One-to-One      c.2 Pemodelan One-to-Many      c.3 Pemodelan Many-to-Many      c.4 Mengenal HABTM dalam pemodelan Many-to-Many      c.5 Pemodelan Polymorphic8. Mengenal Controller di Rails   a. Actions di Controller   b. Multi Render HTML dan JSON   c. Render Partial   d. Passing Local Variable   e. Mengenal dan Memanfaatkan Render Collection9. Mengenal View di Rails   a. Cara penulisan   b. Form Builder   c. Menggunakan Slim   d. Menggunakan SimpleForm10. Membuat Project Blog    a. Buat Admin Panel       a.1 Admin from Scratch       a.2 ActiveAdmin permudah Admin    b. Buat Authorisasi User       b.1 Devise       b.2 CanCanCan       b.3 Pundit       b.4 Social AuthMungkin itu saja. Adapun kurang-lebihnya nanti akan saya tambahkan.",
            "content_html": "<p>Tujuan blog ini dibangun adalah untuk belajar menjadi Ruby Developer. Namun, tulisan yang ada saat ini, belum menampilkan tahap belajar. Yang ada hanyalah tahap <code class=\"highlighter-rouge\">solusi dari permasalahan</code>. Untuk itu, saya mencoba membuat tulisan mengenai Ruby on Rails secara berurutan. Mulai dari pemasangan hingga tahap pembuatan project.</p><p>Oleh karena itu, saya menamai Rails 101. Apa itu 101? Intinya adalah belajar dari tingkat dasar hingga mahir. Mengenai pengertian 101 kalian mungkin bisa baca ditautan Wikipedia berikut <a href=\"https://en.wikipedia.org/wiki/101_%28number%29#In_education\">https://en.wikipedia.org/wiki/101_%28number%29#In_education</a>.</p><h2 id=\"daftar-isi\">Daftar Isi</h2><p>Adapun daftar isi tulisan ini adalah kira-kira sebagai berikut:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1. Pembukaan2. Mengenal Bundler dan GemFile   a. Apa itu Bundler?   b. Membuat GemFile   b. Menambahkan Gem3. Cara Pasang Rails   a. Pasang Rails di GNU/Linux   b. Pasang Rails di macOS   c. Pasang Rails di Window   d. Pasang Rails di Android   e. Pasang Rails dengan Versi Berbeda   f. Pasang Rails dengan Database Lain      f.1 Pasang dengan SQLite3      f.2 Pasang dengan PostgreSQL      f.3 Pasang dengan MySQL/Mariadb4. Mengenal struktur direktori di Rails   a. Struktur dasar MVC   b. Mengenal Pewarisan5. Mengenal baris perintah di Rails   a. Membuat Controller dengan baris perintah   b. Membuat Model dengan Baris Perintah   c. Membuat Migration dengan Baris Perintah   d. Membuat Resources dengan Baris Perintah   e. Perintah Rake dan Task-nya6. Mengenal dan Memahami Route   a. Membuat Route sederhana   b. Membuat Route untuk Resources   c. Mengenal Scope, Trait dan Namespace7. Mengenal ActiveRecord sebagai Model di Rails   a. Macam-Macam Validasi di Model   b. Macam-Macam Callback di Model   c. Menganl dan Memahami Reference di Model      c.1 Pemodelan One-to-One      c.2 Pemodelan One-to-Many      c.3 Pemodelan Many-to-Many      c.4 Mengenal HABTM dalam pemodelan Many-to-Many      c.5 Pemodelan Polymorphic8. Mengenal Controller di Rails   a. Actions di Controller   b. Multi Render HTML dan JSON   c. Render Partial   d. Passing Local Variable   e. Mengenal dan Memanfaatkan Render Collection9. Mengenal View di Rails   a. Cara penulisan   b. Form Builder   c. Menggunakan Slim   d. Menggunakan SimpleForm10. Membuat Project Blog    a. Buat Admin Panel       a.1 Admin from Scratch       a.2 ActiveAdmin permudah Admin    b. Buat Authorisasi User       b.1 Devise       b.2 CanCanCan       b.3 Pundit       b.4 Social Auth</code></pre></div></div><p>Mungkin itu saja. Adapun kurang-lebihnya nanti akan saya tambahkan.</p>",
            "url": "http://localhost:4000/rails-101-pembukaan",
            
            
            
            
            
            "date_published": "2020-04-22T09:50:00+07:00",
            "date_modified": "2020-04-22T09:50:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/rspec-setup-capybara-dengan-selenium-firefox-dan-chrome-driver",
            "title": "Rspec - Setup Capybara dengan Selenium Firefox dan Chrome Driver",
            "summary": null,
            "content_text": "Asumsi saya kalian sudah paham dengan Rspec dan Capybara. Sedikit introduksi saja, capybara adalah suatu tools yang digunakan untuk membuat acceptence test atau feature test jika di rspec.Berikut ini cara mengintegrasikan capybara dengan selenium dengan driver Firefox dan Google Chrome.Langsung Praktek      Tambahkan gem capybara, rspec-rails dan webdrivers pada Gemfile di project rails kalian:     .. group :test do gem 'capybara' gem 'rspec-rails' gem 'webdrivers' ...            Kemudian unduh chromedriver melalui tautan berikut: https://chromedriver.chromium.org/downloads        Sunting berkas rails_helper.rb lalu tambahkan skrip di bawah ini:     require 'capybara/rspec' RSpec.configure do |config|     Capybara.server = :puma, { Silent: true }     Capybara.run_server = true     Capybara.register_driver :headless_chrome do |app| \tcaps = Selenium::WebDriver::Remote::Capabilities.chrome(loggingPrefs: { browser: 'ALL' }) \topts = Selenium::WebDriver::Chrome::Options.new \tchrome_args = %w[--headless --no-sandbox --disable-gpu --window-size=1920,1080 --remote-debugging-port=9222] \tchrome_args.each { |arg| opts.add_argument(arg) } \tCapybara::Selenium::Driver.new(app, browser: :chrome, options: opts, desired_capabilities: caps)     end     Capybara.register_driver :chrome do |app| \tCapybara::Selenium::Driver.new app, :browser =&gt; :chrome     end     Capybara.register_driver :firefox do |app| \tprofile = Selenium::WebDriver::Firefox::Profile.new \tprofile['plugin.state.flash'] = 0 \tprofile['browser.download.dir'] = DownloadHelper::DOWNLOAD_PATH.to_s \tprofile['browser.download.folderList'] = 2 \tprofile['browser.helperApps.neverAsk.saveToDisk'] = 'text/csv' \tfirefox_options = { firefox_profile: profile } \tif ENV['SELENIUM_FIREFOX_PATH'] \t    firefox_options[:firefox_binary] = ENV['SELENIUM_FIREFOX_PATH'] \tend \tcapabilities = Selenium::WebDriver::Remote::Capabilities.firefox(firefox_options) \tCapybara::Selenium::Driver.new(app, browser: :remote, url: \"http://#{SELENIUM_SERVER}:4444/wd/hub\", desired_capabilities: capabilities)     end     Capybara.default_driver = :headless_chrome     Capybara.javascript_driver = :headless_chrome end      Selesai sekarang kalian bisa jalankan feature test kalian di rspec, dengan selenium. Skrip di atas, default drivernya adalah headless_chrome. Kalau mau pakai Firefox atau Google Chrome browser bisa langsung kalian ganti saja menjadi :firefox atau :chrome.TambahanSebagai tambahan kalau kalian ingin buat selenium browser untuk Opera Mini, kalian bisa lakukan dengan mengganti user-agentnya seperti berikut:Capybara.register_driver :opera_mini do |app|  profile = Selenium::WebDriver::Firefox::Profile.new  profile['general.useragent.override'] = 'Opera/9.80 (Android; Opera Mini/7.6.35766/35.5706; U; en) Presto/2.8.119 Version/11.10'  firefox_options = { firefox_profile: profile }  if ENV['SELENIUM_FIREFOX_PATH']    firefox_options[:firefox_binary] = ENV['SELENIUM_FIREFOX_PATH']  end  capabilities = Selenium::WebDriver::Remote::Capabilities.firefox(firefox_options)  Capybara::Selenium::Driver.new(app, browser: :remote, url: \"http://#{SELENIUM_SERVER}:4444/wd/hub\", desired_capabilities: capabilities)endSemoga bermanfaat :)",
            "content_html": "<p>Asumsi saya kalian sudah paham dengan Rspec dan Capybara. Sedikit introduksi saja, capybara adalah suatu tools yang digunakan untuk membuat acceptence test atau feature test jika di rspec.</p><p>Berikut ini cara mengintegrasikan capybara dengan selenium dengan driver Firefox dan Google Chrome.</p><h2 id=\"langsung-praktek\">Langsung Praktek</h2><ol>  <li>    <p>Tambahkan gem <code class=\"highlighter-rouge\">capybara</code>, <code class=\"highlighter-rouge\">rspec-rails</code> dan <code class=\"highlighter-rouge\">webdrivers</code> pada Gemfile di project rails kalian:</p>    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"o\">..</span> <span class=\"n\">group</span> <span class=\"ss\">:test</span> <span class=\"k\">do</span> <span class=\"n\">gem</span> <span class=\"s1\">'capybara'</span> <span class=\"n\">gem</span> <span class=\"s1\">'rspec-rails'</span> <span class=\"n\">gem</span> <span class=\"s1\">'webdrivers'</span> <span class=\"o\">...</span></code></pre></div>    </div>  </li>  <li>    <p>Kemudian unduh <code class=\"highlighter-rouge\">chromedriver</code> melalui tautan berikut: <a href=\"https://chromedriver.chromium.org/downloads\">https://chromedriver.chromium.org/downloads</a></p>  </li>  <li>    <p>Sunting berkas <code class=\"highlighter-rouge\">rails_helper.rb</code> lalu tambahkan skrip di bawah ini:</p>    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nb\">require</span> <span class=\"s1\">'capybara/rspec'</span> <span class=\"no\">RSpec</span><span class=\"p\">.</span><span class=\"nf\">configure</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">server</span> <span class=\"o\">=</span> <span class=\"ss\">:puma</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"no\">Silent</span><span class=\"p\">:</span> <span class=\"kp\">true</span> <span class=\"p\">}</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">run_server</span> <span class=\"o\">=</span> <span class=\"kp\">true</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">register_driver</span> <span class=\"ss\">:headless_chrome</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">app</span><span class=\"o\">|</span> \t<span class=\"n\">caps</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Remote</span><span class=\"o\">::</span><span class=\"no\">Capabilities</span><span class=\"p\">.</span><span class=\"nf\">chrome</span><span class=\"p\">(</span><span class=\"ss\">loggingPrefs: </span><span class=\"p\">{</span> <span class=\"ss\">browser: </span><span class=\"s1\">'ALL'</span> <span class=\"p\">})</span> \t<span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Chrome</span><span class=\"o\">::</span><span class=\"no\">Options</span><span class=\"p\">.</span><span class=\"nf\">new</span> \t<span class=\"n\">chrome_args</span> <span class=\"o\">=</span> <span class=\"sx\">%w[--headless --no-sandbox --disable-gpu --window-size=1920,1080 --remote-debugging-port=9222]</span> \t<span class=\"n\">chrome_args</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"p\">{</span> <span class=\"o\">|</span><span class=\"n\">arg</span><span class=\"o\">|</span> <span class=\"n\">opts</span><span class=\"p\">.</span><span class=\"nf\">add_argument</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span> <span class=\"p\">}</span> \t<span class=\"no\">Capybara</span><span class=\"o\">::</span><span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">Driver</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"ss\">browser: :chrome</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"n\">opts</span><span class=\"p\">,</span> <span class=\"ss\">desired_capabilities: </span><span class=\"n\">caps</span><span class=\"p\">)</span>     <span class=\"k\">end</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">register_driver</span> <span class=\"ss\">:chrome</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">app</span><span class=\"o\">|</span> \t<span class=\"no\">Capybara</span><span class=\"o\">::</span><span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">Driver</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"ss\">:browser</span> <span class=\"o\">=&gt;</span> <span class=\"ss\">:chrome</span>     <span class=\"k\">end</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">register_driver</span> <span class=\"ss\">:firefox</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">app</span><span class=\"o\">|</span> \t<span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Firefox</span><span class=\"o\">::</span><span class=\"no\">Profile</span><span class=\"p\">.</span><span class=\"nf\">new</span> \t<span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'plugin.state.flash'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span> \t<span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'browser.download.dir'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"no\">DownloadHelper</span><span class=\"o\">::</span><span class=\"no\">DOWNLOAD_PATH</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> \t<span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'browser.download.folderList'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> \t<span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'browser.helperApps.neverAsk.saveToDisk'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'text/csv'</span> \t<span class=\"n\">firefox_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">firefox_profile: </span><span class=\"n\">profile</span> <span class=\"p\">}</span> \t<span class=\"k\">if</span> <span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'SELENIUM_FIREFOX_PATH'</span><span class=\"p\">]</span> \t    <span class=\"n\">firefox_options</span><span class=\"p\">[</span><span class=\"ss\">:firefox_binary</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'SELENIUM_FIREFOX_PATH'</span><span class=\"p\">]</span> \t<span class=\"k\">end</span> \t<span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Remote</span><span class=\"o\">::</span><span class=\"no\">Capabilities</span><span class=\"p\">.</span><span class=\"nf\">firefox</span><span class=\"p\">(</span><span class=\"n\">firefox_options</span><span class=\"p\">)</span> \t<span class=\"no\">Capybara</span><span class=\"o\">::</span><span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">Driver</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"ss\">browser: :remote</span><span class=\"p\">,</span> <span class=\"ss\">url: </span><span class=\"s2\">\"http://</span><span class=\"si\">#{</span><span class=\"no\">SELENIUM_SERVER</span><span class=\"si\">}</span><span class=\"s2\">:4444/wd/hub\"</span><span class=\"p\">,</span> <span class=\"ss\">desired_capabilities: </span><span class=\"n\">capabilities</span><span class=\"p\">)</span>     <span class=\"k\">end</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">default_driver</span> <span class=\"o\">=</span> <span class=\"ss\">:headless_chrome</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">javascript_driver</span> <span class=\"o\">=</span> <span class=\"ss\">:headless_chrome</span> <span class=\"k\">end</span></code></pre></div>    </div>  </li></ol><p>Selesai sekarang kalian bisa jalankan feature test kalian di rspec, dengan selenium. Skrip di atas, default drivernya adalah <code class=\"highlighter-rouge\">headless_chrome</code>. Kalau mau pakai Firefox atau Google Chrome browser bisa langsung kalian ganti saja menjadi <code class=\"highlighter-rouge\">:firefox</code> atau <code class=\"highlighter-rouge\">:chrome</code>.</p><h2 id=\"tambahan\">Tambahan</h2><p>Sebagai tambahan kalau kalian ingin buat selenium browser untuk Opera Mini, kalian bisa lakukan dengan mengganti user-agentnya seperti berikut:</p><div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">register_driver</span> <span class=\"ss\">:opera_mini</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">app</span><span class=\"o\">|</span>  <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Firefox</span><span class=\"o\">::</span><span class=\"no\">Profile</span><span class=\"p\">.</span><span class=\"nf\">new</span>  <span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'general.useragent.override'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Opera/9.80 (Android; Opera Mini/7.6.35766/35.5706; U; en) Presto/2.8.119 Version/11.10'</span>  <span class=\"n\">firefox_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">firefox_profile: </span><span class=\"n\">profile</span> <span class=\"p\">}</span>  <span class=\"k\">if</span> <span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'SELENIUM_FIREFOX_PATH'</span><span class=\"p\">]</span>    <span class=\"n\">firefox_options</span><span class=\"p\">[</span><span class=\"ss\">:firefox_binary</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'SELENIUM_FIREFOX_PATH'</span><span class=\"p\">]</span>  <span class=\"k\">end</span>  <span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Remote</span><span class=\"o\">::</span><span class=\"no\">Capabilities</span><span class=\"p\">.</span><span class=\"nf\">firefox</span><span class=\"p\">(</span><span class=\"n\">firefox_options</span><span class=\"p\">)</span>  <span class=\"no\">Capybara</span><span class=\"o\">::</span><span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">Driver</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"ss\">browser: :remote</span><span class=\"p\">,</span> <span class=\"ss\">url: </span><span class=\"s2\">\"http://</span><span class=\"si\">#{</span><span class=\"no\">SELENIUM_SERVER</span><span class=\"si\">}</span><span class=\"s2\">:4444/wd/hub\"</span><span class=\"p\">,</span> <span class=\"ss\">desired_capabilities: </span><span class=\"n\">capabilities</span><span class=\"p\">)</span><span class=\"k\">end</span></code></pre></div></div><p>Semoga bermanfaat :)</p>",
            "url": "http://localhost:4000/rspec-setup-capybara-dengan-selenium-firefox-dan-chrome-driver",
            
            
            
            
            
            "date_published": "2020-04-08T17:09:00+07:00",
            "date_modified": "2020-04-08T17:09:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/menghilangkan-deprecation-warning-ketika-menggunakan-ruby-2-7-x",
            "title": "Menghilangkan Deprecation Warning Ketika Menggunakan Ruby 2.7.x",
            "summary": null,
            "content_text": "Sewaktu menulis tentang rbenv, saya menyarankan agar kalian menggunakan ruby terbaru. Untuk saat ini April 2020 versi terbaru dari ruby ialah 2.7.0.Pada saat kalian memasang Rails di ruby 2.7.0, ketika dijalankan. Kalian akan mendapatkan pesan peringatan deprecation (kode sudah usang). Memang peringatan tersebut tidak mempengaruhi aplikasi. Rails tetap berjalan dengan normal.Namun saya rasa kalian akan merasa jengkel karena peringatan kode usangnya sangatlah banyak. Sejujurnya saya sendiri juga jengkel.Untuk mengatasi masalah tersebut, ternyata caranya cukup mudah kita hanya perlu menambahkan perintah berikut:RUBYOPT='-W:no-deprecated -W:no-experimental'Diawal perintah rails. Contohnya begini. Kalau kalian ingin menjalankan rails s cukup tambahin local variable di atas. Jadi seperti berikut:RUBYOPT='-W:no-deprecated -W:no-experimental' rails sGampang kan?. Biar lebih gampang lagi kalian bisa export variable di atas dan menarunya di .bashrc.export RUBYOPT='-W:no-deprecated -W:no-experimental'Selanjutnya kalian bisa langsung menjalankan Rails tanpa ada deprecation warning lagi :)",
            "content_html": "<p>Sewaktu menulis tentang <a href=\"https://rubyholic.github.io/install-rbenv\">rbenv</a>, saya menyarankan agar kalian menggunakan ruby terbaru. Untuk saat ini April 2020 versi terbaru dari ruby ialah 2.7.0.</p><p>Pada saat kalian memasang Rails di ruby 2.7.0, ketika dijalankan. Kalian akan mendapatkan pesan peringatan <code class=\"highlighter-rouge\">deprecation</code> (kode sudah usang). Memang peringatan tersebut tidak mempengaruhi aplikasi. Rails tetap berjalan dengan normal.</p><p>Namun saya rasa kalian akan merasa jengkel karena peringatan kode usangnya sangatlah banyak. Sejujurnya saya sendiri juga jengkel.</p><p>Untuk mengatasi masalah tersebut, ternyata caranya cukup mudah kita hanya perlu menambahkan perintah berikut:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">RUBYOPT</span><span class=\"o\">=</span><span class=\"s1\">'-W:no-deprecated -W:no-experimental'</span></code></pre></div></div><p>Diawal perintah <code class=\"highlighter-rouge\">rails</code>. Contohnya begini. Kalau kalian ingin menjalankan <code class=\"highlighter-rouge\">rails s</code> cukup tambahin local variable di atas. Jadi seperti berikut:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">RUBYOPT</span><span class=\"o\">=</span><span class=\"s1\">'-W:no-deprecated -W:no-experimental'</span> rails s</code></pre></div></div><p>Gampang kan?. Biar lebih gampang lagi kalian bisa <code class=\"highlighter-rouge\">export</code> variable di atas dan menarunya di <code class=\"highlighter-rouge\">.bashrc</code>.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">export </span><span class=\"nv\">RUBYOPT</span><span class=\"o\">=</span><span class=\"s1\">'-W:no-deprecated -W:no-experimental'</span></code></pre></div></div><p>Selanjutnya kalian bisa langsung menjalankan Rails tanpa ada deprecation warning lagi :)</p>",
            "url": "http://localhost:4000/menghilangkan-deprecation-warning-ketika-menggunakan-ruby-2-7-x",
            
            
            
            
            
            "date_published": "2020-04-02T21:59:00+07:00",
            "date_modified": "2020-04-02T21:59:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/integrasi-bulma-dan-material-design-icon-di-rails-6-dengan-webpacker",
            "title": "Integrasi Bulma dan Material Design Icon di Rails 6 dengan Webpacker",
            "summary": null,
            "content_text": "Bulma merupakan salah satu CSS fremework yang sedang naik daun saat ini. Salah satu yang saya suka dari Bulma adalah ia hanya CSS tanpa JS, berbeda dengan Bootstrap yang memerlukan JS (jQuery, popper.js). Karena Bulma hanya CSS otomatis cara integrasi di Rails 6 dengan Webpacker sangatlah mudah.Berikut ini cara integrasi Bulma di Rails 6 dengan Webpacker:BulmaPertama-tama tambahkan dulu Bulma dengan yarn.yarn add bulmaKemudian tinggal kita import dengan edit pada file app/javascript/packs/application.js lalu isi dengan skrip berikutimport \"bulma\"Selesai kalian tinggal compile assets nya dengan perintah berikut:rails assets:precompileUntuk mengetes Bulma suda berjalan di Rails, kalian tinggal coba ambil sample code di dokumentasi Bulma.Material Design IconNah, kalau Material Design Icon atau disingkat dengan MDI sama seperti Fontawesome yakni web font. Integrasi MDI di Rails juga sangat mudah. Yang pertama dilakukan adalah:Tambahkan MDI dengan yarn:yarn add @mdi/fontLalu jangan lupa import css di app/javascript/packs/application.js isi dengan skrip berikut:import '@mdi/font/scss/materialdesignicons';Seperti biasa jika kita menambahkan assets wajib untuk melakukan precompile di Rails agar assets tersebut dapat dipanggil.rails assets:precompileSekarang kalian tinggal coba di view kalian. Contohnya:&lt;i class=\"mdi mdi-account-circle\"&gt;&lt;/i&gt;Semoga bermanfaat :)",
            "content_html": "<p>Bulma merupakan salah satu CSS fremework yang sedang naik daun saat ini. Salah satu yang saya suka dari Bulma adalah ia hanya CSS tanpa JS, berbeda dengan Bootstrap yang memerlukan JS (jQuery, popper.js). Karena Bulma hanya CSS otomatis cara integrasi di Rails 6 dengan Webpacker sangatlah mudah.</p><p>Berikut ini cara integrasi Bulma di Rails 6 dengan Webpacker:</p><h2 id=\"bulma\">Bulma</h2><p>Pertama-tama tambahkan dulu Bulma dengan yarn.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>yarn add bulma</code></pre></div></div><p>Kemudian tinggal kita import dengan edit pada file <code class=\"highlighter-rouge\">app/javascript/packs/application.js</code> lalu isi dengan skrip berikut</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">bulma</span><span class=\"dl\">\"</span></code></pre></div></div><p>Selesai kalian tinggal compile assets nya dengan perintah berikut:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails assets:precompile</code></pre></div></div><p>Untuk mengetes Bulma suda berjalan di Rails, kalian tinggal coba ambil sample code di dokumentasi Bulma.</p><h2 id=\"material-design-icon\">Material Design Icon</h2><p>Nah, kalau Material Design Icon atau disingkat dengan MDI sama seperti Fontawesome yakni web font. Integrasi MDI di Rails juga sangat mudah. Yang pertama dilakukan adalah:</p><p>Tambahkan MDI dengan yarn:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>yarn add @mdi/font</code></pre></div></div><p>Lalu jangan lupa import css di <code class=\"highlighter-rouge\">app/javascript/packs/application.js</code> isi dengan skrip berikut:</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">@mdi/font/scss/materialdesignicons</span><span class=\"dl\">'</span><span class=\"p\">;</span></code></pre></div></div><p>Seperti biasa jika kita menambahkan assets wajib untuk melakukan precompile di Rails agar assets tersebut dapat dipanggil.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails assets:precompile</code></pre></div></div><p>Sekarang kalian tinggal coba di view kalian. Contohnya:</p><div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"mdi mdi-account-circle\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span></code></pre></div></div><p>Semoga bermanfaat :)</p>",
            "url": "http://localhost:4000/integrasi-bulma-dan-material-design-icon-di-rails-6-dengan-webpacker",
            
            
            
            
            
            "date_published": "2020-03-31T11:04:00+07:00",
            "date_modified": "2020-03-31T11:04:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/script-mengganti-versi-pada-file-migration",
            "title": "Script Mengganti Versi pada File Migration",
            "summary": null,
            "content_text": "Ketika upgrade Rails, saya melakukan drop database. Tujuannya untuk memastikan seluruhnya berjalan dengan baik, jika aplikasi saya di setup dari awal. Yang terjadi adalah tidak saya mengalami error seperti berikut:StandardError: An error has occurred, this and all later migrations canceled:Directly inheriting from ActiveRecord::Migration is not supported. Please specify the Rails release the migration was written for:  class RolifyCreateRoles &lt; ActiveRecord::Migration[4.2]Skripnya sebagai berikut:Khusus Pengguna GNU/Linuxgrep -rl \"ActiveRecord::Migration$\" db | xargs sed -i 's/ActiveRecord::Migration/ActiveRecord::Migration[5.1]/g'Pengguna macOSgrep -rl \"ActiveRecord::Migration$\" db | xargs sed -i \"\" \"s/ActiveRecord::Migration/ActiveRecord::Migration[5.1]/g\"Sumberhttps://github.com/RolifyCommunity/rolify/issues/444",
            "content_html": "<p>Ketika upgrade Rails, saya melakukan drop database. Tujuannya untuk memastikan seluruhnya berjalan dengan baik, jika aplikasi saya di setup dari awal. Yang terjadi adalah tidak saya mengalami error seperti berikut:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>StandardError: An error has occurred, this and all later migrations canceled:Directly inheriting from ActiveRecord::Migration is not supported. Please specify the Rails release the migration was written for:  class RolifyCreateRoles &lt; ActiveRecord::Migration[4.2]</code></pre></div></div><p>Skripnya sebagai berikut:</p><h2 id=\"khusus-pengguna-gnulinux\">Khusus Pengguna GNU/Linux</h2><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">grep</span> <span class=\"nt\">-rl</span> <span class=\"s2\">\"ActiveRecord::Migration$\"</span> db | xargs <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">'s/ActiveRecord::Migration/ActiveRecord::Migration[5.1]/g'</span></code></pre></div></div><h2 id=\"pengguna-macos\">Pengguna macOS</h2><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">grep</span> <span class=\"nt\">-rl</span> <span class=\"s2\">\"ActiveRecord::Migration$\"</span> db | xargs <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"s/ActiveRecord::Migration/ActiveRecord::Migration[5.1]/g\"</span></code></pre></div></div><h2 id=\"sumber\">Sumber</h2><p><a href=\"https://github.com/RolifyCommunity/rolify/issues/444\">https://github.com/RolifyCommunity/rolify/issues/444</a></p>",
            "url": "http://localhost:4000/script-mengganti-versi-pada-file-migration",
            
            
            
            
            
            "date_published": "2020-03-23T15:04:00+07:00",
            "date_modified": "2020-03-23T15:04:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/menjalankan-rails-6-di-nginx-dengan-puma",
            "title": "Menjalankan Rails 6 di Nginx dengan Puma",
            "summary": null,
            "content_text": "Mendaringkan aplikasi rails. Kita bisa memanfaatkan puma sebagai reverse-proxy yang nantinya bisa kita integrasikan dengan nginx. Berikut ini caranya:Pertama-tama kita sunting berkas config/puma.rb:## letakan app_dir paling atasapp_dir = File.expand_path '../..', __FILE__### untuk bind bebas mau ditaru di mana pun, yang terpenting sesudah app_dirbind ENV.fetch(\"SOCKETFILE\") { \"unix://#{app_dir}/tmp/sockets/puma.sock\" }Kemudian buat service file menggunakan systemd:$ sudo touch /etc/systemd/system/puma.service$ sudo vim /etc/systemd/system/puma.serviceAsumsi berkas rails kalian terletak di /home/web/rails, skrip systemd -nya sebagai berikut:[Unit]Description=Puma Rails ServerAfter=network.target[Service]Type=simpleUser=webWorkingDirectory=/home/web/rails/ExecStart=/home/web/.rbenv/shims/puma -C /home/web/rails/config/puma.rb /home/web/rails/config.ruExecStop=/home/web/.rbenv/shims/pumactl -S /home/web/rails/tmp/pids/server.pid stopTimeoutSec=15Restart=always[Install]WantedBy=multi-user.targetPada skrip di atas puma berada di direktori .rbenv/shims ini karena contoh di sini untuk pengguna rbenv. Untuk memastikan di mana puma berada kalian bisa menggunakan perintah which, contoh:$ which puma$ which pumactlSetelah selesai, tinggal kita reload dan jalankan puma -nya.$ sudo systemctl daemon-reload$ sudo systemctl start puma.service$ sudo systemctl status pumaJika sudah hijau berati kita sudah berhasil membuat puma dengan systemd.Langkah selanjutnya adalah kita buat server block di Nginx. Dan masukan konfirgurasinya seperti berikut:upstream app {    server unix:///home/web/rails/tmp/sockets/puma.sock;}server {    root /home/web/rails/public/;    location / {\ttry_files $uri @app;    }    location @app {\tproxy_pass http://app;\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\tproxy_set_header Host $http_host;\tproxy_redirect off;    }}Khusus Pengguna httpsUbah pada baris @app menjadi seperti berikut:....location @app {    proxy_pass http://app;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    proxy_set_header Host $http_host;    proxy_set_header X-Forwarded-Ssl on;    proxy_redirect off;}Terakhir tinggal kita restart nginx$ sudo nginx -t$ sudo systemctl restart nginx",
            "content_html": "<p>Mendaringkan aplikasi <code class=\"highlighter-rouge\">rails</code>. Kita bisa memanfaatkan <code class=\"highlighter-rouge\">puma</code> sebagai <code class=\"highlighter-rouge\">reverse-proxy</code> yang nantinya bisa kita integrasikan dengan <code class=\"highlighter-rouge\">nginx</code>. Berikut ini caranya:</p><p>Pertama-tama kita sunting berkas <code class=\"highlighter-rouge\">config/puma.rb</code>:</p><div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">## letakan app_dir paling atas</span><span class=\"n\">app_dir</span> <span class=\"o\">=</span> <span class=\"no\">File</span><span class=\"p\">.</span><span class=\"nf\">expand_path</span> <span class=\"s1\">'../..'</span><span class=\"p\">,</span> <span class=\"kp\">__FILE__</span><span class=\"c1\">### untuk bind bebas mau ditaru di mana pun, yang terpenting sesudah app_dir</span><span class=\"n\">bind</span> <span class=\"no\">ENV</span><span class=\"p\">.</span><span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"s2\">\"SOCKETFILE\"</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"s2\">\"unix://</span><span class=\"si\">#{</span><span class=\"n\">app_dir</span><span class=\"si\">}</span><span class=\"s2\">/tmp/sockets/puma.sock\"</span> <span class=\"p\">}</span></code></pre></div></div><p>Kemudian buat <em>service file</em> menggunakan <code class=\"highlighter-rouge\">systemd</code>:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo touch</span> /etc/systemd/system/puma.service<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>vim /etc/systemd/system/puma.service</code></pre></div></div><p>Asumsi berkas <code class=\"highlighter-rouge\">rails</code> kalian terletak di <code class=\"highlighter-rouge\">/home/web/rails</code>, skrip <code class=\"highlighter-rouge\">systemd</code> -nya sebagai berikut:</p><div class=\"language-ini highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[Unit]</span><span class=\"py\">Description</span><span class=\"p\">=</span><span class=\"s\">Puma Rails Server</span><span class=\"py\">After</span><span class=\"p\">=</span><span class=\"s\">network.target</span><span class=\"nn\">[Service]</span><span class=\"py\">Type</span><span class=\"p\">=</span><span class=\"s\">simple</span><span class=\"py\">User</span><span class=\"p\">=</span><span class=\"s\">web</span><span class=\"py\">WorkingDirectory</span><span class=\"p\">=</span><span class=\"s\">/home/web/rails/</span><span class=\"py\">ExecStart</span><span class=\"p\">=</span><span class=\"s\">/home/web/.rbenv/shims/puma -C /home/web/rails/config/puma.rb /home/web/rails/config.ru</span><span class=\"py\">ExecStop</span><span class=\"p\">=</span><span class=\"s\">/home/web/.rbenv/shims/pumactl -S /home/web/rails/tmp/pids/server.pid stop</span><span class=\"py\">TimeoutSec</span><span class=\"p\">=</span><span class=\"s\">15</span><span class=\"py\">Restart</span><span class=\"p\">=</span><span class=\"s\">always</span><span class=\"nn\">[Install]</span><span class=\"py\">WantedBy</span><span class=\"p\">=</span><span class=\"s\">multi-user.target</span></code></pre></div></div><p>Pada skrip di atas <code class=\"highlighter-rouge\">puma</code> berada di direktori <code class=\"highlighter-rouge\">.rbenv/shims</code> ini karena contoh di sini untuk pengguna <a href=\"https://rubyholic.github.io/rbenv/2020/01/31/install-rbenv.html\">rbenv</a>. Untuk memastikan di mana <code class=\"highlighter-rouge\">puma</code> berada kalian bisa menggunakan perintah <code class=\"highlighter-rouge\">which</code>, contoh:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>which puma<span class=\"nv\">$ </span>which pumactl</code></pre></div></div><p>Setelah selesai, tinggal kita <em>reload</em> dan jalankan <code class=\"highlighter-rouge\">puma</code> -nya.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl daemon-reload<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl start puma.service<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl status puma</code></pre></div></div><p>Jika sudah hijau berati kita sudah berhasil membuat <code class=\"highlighter-rouge\">puma</code> dengan <code class=\"highlighter-rouge\">systemd</code>.Langkah selanjutnya adalah kita buat <code class=\"highlighter-rouge\">server block</code> di Nginx. Dan masukan konfirgurasinya seperti berikut:</p><div class=\"language-nginx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">upstream</span> <span class=\"s\">app</span> <span class=\"p\">{</span>    <span class=\"kn\">server</span> <span class=\"s\">unix:///home/web/rails/tmp/sockets/puma.sock</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"k\">server</span> <span class=\"p\">{</span>    <span class=\"kn\">root</span> <span class=\"n\">/home/web/rails/public/</span><span class=\"p\">;</span>    <span class=\"kn\">location</span> <span class=\"n\">/</span> <span class=\"p\">{</span>\t<span class=\"kn\">try_files</span> <span class=\"nv\">$uri</span> <span class=\"s\">@app</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"kn\">location</span> <span class=\"s\">@app</span> <span class=\"p\">{</span>\t<span class=\"kn\">proxy_pass</span> <span class=\"s\">http://app</span><span class=\"p\">;</span>\t<span class=\"kn\">proxy_set_header</span> <span class=\"s\">X-Forwarded-For</span> <span class=\"nv\">$proxy_add_x_forwarded_for</span><span class=\"p\">;</span>\t<span class=\"kn\">proxy_set_header</span> <span class=\"s\">Host</span> <span class=\"nv\">$http_host</span><span class=\"p\">;</span>\t<span class=\"kn\">proxy_redirect</span> <span class=\"no\">off</span><span class=\"p\">;</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><h3 id=\"khusus-pengguna-https\">Khusus Pengguna https</h3><p>Ubah pada baris <code class=\"highlighter-rouge\">@app</code> menjadi seperti berikut:</p><div class=\"language-nginx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">....</span><span class=\"s\">location</span> <span class=\"s\">@app</span> <span class=\"p\">{</span>    <span class=\"kn\">proxy_pass</span> <span class=\"s\">http://app</span><span class=\"p\">;</span>    <span class=\"kn\">proxy_set_header</span> <span class=\"s\">X-Forwarded-For</span> <span class=\"nv\">$proxy_add_x_forwarded_for</span><span class=\"p\">;</span>    <span class=\"kn\">proxy_set_header</span> <span class=\"s\">Host</span> <span class=\"nv\">$http_host</span><span class=\"p\">;</span>    <span class=\"kn\">proxy_set_header</span> <span class=\"s\">X-Forwarded-Ssl</span> <span class=\"no\">on</span><span class=\"p\">;</span>    <span class=\"kn\">proxy_redirect</span> <span class=\"no\">off</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><p>Terakhir tinggal kita <em>restart</em> <code class=\"highlighter-rouge\">nginx</code></p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>nginx <span class=\"nt\">-t</span><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl restart nginx</code></pre></div></div>",
            "url": "http://localhost:4000/menjalankan-rails-6-di-nginx-dengan-puma",
            
            
            
            "tags": ["rails6","puma","nginx"],
            
            "date_published": "2020-02-25T14:48:00+07:00",
            "date_modified": "2020-02-25T14:48:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/integrasi-bootstrap-di-rails-6-dengan-webpack",
            "title": "Integrasi Bootstrap di Rails 6 dengan Webpack",
            "summary": null,
            "content_text": "Jika kalian terbiasa dengan css framework seperti bootstrap mungkin kalian akan mengintegrasikan pula pada projek rails kalian. Kali ini saya ingin berbagi mengenai cara mengintegrasikan bootstrap di rails 6.Dikarenakan rails 6 sudah memakai webpack jadi kita dapat dengan mudah memasang bootstrap dari yarn. Berikut caranya:$ yarn add bootstrap jquery popper.jsKemudian tambahkan skrip di bawah ini di berkas config/webpack/environment.js :const { environment } = require('@rails/webpacker')const webpack = require('webpack')environment.plugins.append('Provide',    new webpack.ProvidePlugin({\t$: 'jquery',\tjQuery: 'jquery',\tPopper: ['popper.js', 'default']    }))module.exports = environmentKemudian tambahkan juga skrip di bawah ini pada berkas app/javascript/packs/application.js :import 'bootstrap'import './src/application.scss'Selanjutnya buat direktori:$ mkdir app/javascript/packs/src$ cd app/javascript/packs/srcDan buat berkas di dalamnya bernama application.scss$ touch application.scss$ vim application.scssKemudian isi dengan skrip di bawah ini:@import '~bootstrap/scss/bootstrap';Langkah terakhir:$ rails assets:precompile$ rails webpacker:compileSekarang rails kalian sudah terintegrasi dengan bootstrap",
            "content_html": "<p>Jika kalian terbiasa dengan css framework seperti <code class=\"highlighter-rouge\">bootstrap</code> mungkin kalian akan mengintegrasikan pula pada projek <code class=\"highlighter-rouge\">rails</code> kalian. Kali ini saya ingin berbagi mengenai cara mengintegrasikan <code class=\"highlighter-rouge\">bootstrap</code> di <code class=\"highlighter-rouge\">rails 6</code>.</p><p>Dikarenakan <code class=\"highlighter-rouge\">rails 6</code> sudah memakai <code class=\"highlighter-rouge\">webpack</code> jadi kita dapat dengan mudah memasang <code class=\"highlighter-rouge\">bootstrap</code> dari <code class=\"highlighter-rouge\">yarn</code>. Berikut caranya:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>yarn add bootstrap jquery popper.js</code></pre></div></div><p>Kemudian tambahkan skrip di bawah ini di berkas <code class=\"highlighter-rouge\">config/webpack/environment.js</code> :</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">environment</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">@rails/webpacker</span><span class=\"dl\">'</span><span class=\"p\">)</span><span class=\"kd\">const</span> <span class=\"nx\">webpack</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">webpack</span><span class=\"dl\">'</span><span class=\"p\">)</span><span class=\"nx\">environment</span><span class=\"p\">.</span><span class=\"nx\">plugins</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Provide</span><span class=\"dl\">'</span><span class=\"p\">,</span>    <span class=\"k\">new</span> <span class=\"nx\">webpack</span><span class=\"p\">.</span><span class=\"nx\">ProvidePlugin</span><span class=\"p\">({</span>\t<span class=\"na\">$</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">jquery</span><span class=\"dl\">'</span><span class=\"p\">,</span>\t<span class=\"na\">jQuery</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">jquery</span><span class=\"dl\">'</span><span class=\"p\">,</span>\t<span class=\"na\">Popper</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">popper.js</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">default</span><span class=\"dl\">'</span><span class=\"p\">]</span>    <span class=\"p\">})</span><span class=\"p\">)</span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"nx\">environment</span></code></pre></div></div><p>Kemudian tambahkan juga skrip di bawah ini pada berkas <code class=\"highlighter-rouge\">app/javascript/packs/application.js</code> :</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">bootstrap</span><span class=\"dl\">'</span><span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">./src/application.scss</span><span class=\"dl\">'</span></code></pre></div></div><p>Selanjutnya buat direktori:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir </span>app/javascript/packs/src<span class=\"nv\">$ </span><span class=\"nb\">cd </span>app/javascript/packs/src</code></pre></div></div><p>Dan buat berkas di dalamnya bernama <code class=\"highlighter-rouge\">application.scss</code></p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">touch </span>application.scss<span class=\"nv\">$ </span>vim application.scss</code></pre></div></div><p>Kemudian isi dengan skrip di bawah ini:</p><div class=\"language-scss highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">@import</span> <span class=\"s1\">'~bootstrap/scss/bootstrap'</span><span class=\"p\">;</span></code></pre></div></div><p>Langkah terakhir:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rails assets:precompile<span class=\"nv\">$ </span>rails webpacker:compile</code></pre></div></div><p>Sekarang <code class=\"highlighter-rouge\">rails</code> kalian sudah terintegrasi dengan <code class=\"highlighter-rouge\">bootstrap</code></p>",
            "url": "http://localhost:4000/integrasi-bootstrap-di-rails-6-dengan-webpack",
            
            
            
            "tags": ["rails6","bootstrap","webpack"],
            
            "date_published": "2020-02-25T14:34:00+07:00",
            "date_modified": "2020-02-25T14:34:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/pasang-rails-5-di-termux",
            "title": "Install Rails 5.2.x in Termux",
            "summary": null,
            "content_text": "Hanya bermodal smartphone, kalian sudah bisa belajar pemrograman ruby. Kalian hanya perlu pasang Termux dari PlayStore, kemudian pasang rbenv di dalam Termux. Caranya sama seperti postingan sebelumnya.IntroKali ini saya ingin membagikan kepada kalian tentang bagaimana cara memasang Ruby on Rails di Termux Smartphone.Menurut pengalaman, kita tidak bisa memasang Rails terbaru, yakni Rails 6. Hanya bisa sampai di Rails 5. Untuk permasalahannya, saya sendiri belum tahu persis, yang jelas ketika di reproduce, terjadi error pada saat meng-compile gem sass. Jadi untuk sementara pakai versi 5.Kemudian untuk versi ruby yang dipakai. Hanya bisa sampai versi 2.5.x. Tidak pada versi 2.6.x atau lebih. Permasalah yang timbul pada ruby versi 2.6.x adalah gagalnya meng-compile bigint di Rails. Lagi-lagi saya juga tidak tahu kenapa. Wkwkwk suram memang.Kebutuhan deploySebelum memulai pastikan di Termux kalian sudah memasang kebutuhan deploy. Kalian tinggal pasang tools berikut:$ pkg install clang make libxml2 libxslt libffi libsqlite nodejs vimInstall Ruby 2.5.7Jangan pakai ruby 2.6.x atau lebih. Maksimal versi 2.5.x seperti yang saya jelaskan diintro di atas.$ rbenv install 2.5.7$ rbenv local 2.5.7$ ruby -vruby 2.5.7p206 (2019-10-01 revision 67816) [aarch64-linux]Pasang GemBeberapa gem ada yang menggunakan system library.$ gem install -N bundler$ gem install -N pkg-config$ gem install -N nokogiri -- --use-system-librariesPasang Rails 5.2.xDi Termux hanya versi rails 5.2.x yang dapat berjalan mulus. Versi 6 tidak bisa.$ gem install -N rails -v 5.2.4Buat Projek Rails$ rails new blog$ cd blog/$ vim GemfileTambahkan pada paling bawah Gemfile.gem 'tzinfo'gem 'tzinfo-data'Lalu jalankan$ bundle installTes ProjekUntuk memastikan rails sudah berjalan atau belum kalian bisa tes dengan perintah:$ rails sJika tidak terjadi error artinya semua instalasi sukses, dan kalian bisa buka projek rails kalian di browser.Selamat belajar.",
            "content_html": "<p>Hanya bermodal smartphone, kalian sudah bisa belajar pemrograman ruby. Kalian hanya perlu pasang Termux dari PlayStore, kemudian pasang <code class=\"highlighter-rouge\">rbenv</code> di dalam Termux. Caranya sama seperti postingan sebelumnya.</p><h2 id=\"intro\">Intro</h2><p>Kali ini saya ingin membagikan kepada kalian tentang bagaimana cara memasang Ruby on Rails di Termux Smartphone.</p><p>Menurut pengalaman, kita tidak bisa memasang Rails terbaru, yakni Rails 6. Hanya bisa sampai di Rails 5. Untuk permasalahannya, saya sendiri belum tahu persis, yang jelas ketika di reproduce, terjadi error pada saat meng-compile gem <code class=\"highlighter-rouge\">sass</code>. Jadi untuk sementara pakai versi 5.</p><p>Kemudian untuk versi ruby yang dipakai. Hanya bisa sampai versi 2.5.x. Tidak pada versi 2.6.x atau lebih. Permasalah yang timbul pada ruby versi 2.6.x adalah gagalnya meng-compile bigint di Rails. Lagi-lagi saya juga tidak tahu kenapa. Wkwkwk suram memang.</p><h2 id=\"kebutuhan-deploy\">Kebutuhan deploy</h2><p>Sebelum memulai pastikan di Termux kalian sudah memasang kebutuhan deploy. Kalian tinggal pasang tools berikut:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>pkg <span class=\"nb\">install </span>clang make libxml2 libxslt libffi libsqlite nodejs vim</code></pre></div></div><h2 id=\"install-ruby-257\">Install Ruby 2.5.7</h2><p>Jangan pakai ruby 2.6.x atau lebih. Maksimal versi 2.5.x seperti yang saya jelaskan diintro di atas.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rbenv <span class=\"nb\">install </span>2.5.7<span class=\"nv\">$ </span>rbenv <span class=\"nb\">local </span>2.5.7<span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span>ruby 2.5.7p206 <span class=\"o\">(</span>2019-10-01 revision 67816<span class=\"o\">)</span> <span class=\"o\">[</span>aarch64-linux]</code></pre></div></div><h2 id=\"pasang-gem\">Pasang Gem</h2><p>Beberapa gem ada yang menggunakan system library.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> bundler<span class=\"nv\">$ </span>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> pkg-config<span class=\"nv\">$ </span>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> nokogiri <span class=\"nt\">--</span> <span class=\"nt\">--use-system-libraries</span></code></pre></div></div><h2 id=\"pasang-rails-52x\">Pasang Rails 5.2.x</h2><p>Di Termux hanya versi rails 5.2.x yang dapat berjalan mulus. Versi 6 tidak bisa.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> rails <span class=\"nt\">-v</span> 5.2.4</code></pre></div></div><h3 id=\"buat-projek-rails\">Buat Projek Rails</h3><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rails new blog<span class=\"nv\">$ </span><span class=\"nb\">cd </span>blog/<span class=\"nv\">$ </span>vim Gemfile</code></pre></div></div><p>Tambahkan pada paling bawah <code class=\"highlighter-rouge\">Gemfile</code>.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"s1\">'tzinfo'</span>gem <span class=\"s1\">'tzinfo-data'</span></code></pre></div></div><p>Lalu jalankan</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>bundle <span class=\"nb\">install</span></code></pre></div></div><h3 id=\"tes-projek\">Tes Projek</h3><p>Untuk memastikan rails sudah berjalan atau belum kalian bisa tes dengan perintah:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rails s</code></pre></div></div><p>Jika tidak terjadi error artinya semua instalasi sukses, dan kalian bisa buka projek rails kalian di browser.</p><p>Selamat belajar.</p>",
            "url": "http://localhost:4000/pasang-rails-5-di-termux",
            
            
            
            
            
            "date_published": "2020-02-22T21:47:37+07:00",
            "date_modified": "2020-02-22T21:47:37+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/install-rbenv",
            "title": "Install Rbenv",
            "summary": null,
            "content_text": "Sebelum memulai belajar pemrograman ruby. Langkah pertama tentunya ialah memasang ruby di sistem operasi. Mungkin beberapa sistem operasi sudah terpasang secara asali (default). Contohnya pengguna macOS. Bagi yang belum ada kalian bisa pasang sesuai dengan sistem operasi yang kalian pergunakan.Untuk mengetahui kalian sudah memasang ruby atau belum, kalian bisa cek di Terminal Emulator dengan perintah berikut:$ ruby -vJika berhasil maka akan keluar informasi seperti ini:ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]Kalau tidak berarti kalian perlu memasangnya.Untuk memasang ruby, saya menyarankan kalian pergunakan rbenv mengapa? Karena untuk menyamakan versi ruby yang dipakai. Biasanya sistem operasi hanya menyediakan versi ruby tertentu, yang biasanya hanya pada versi ruby lawas. Sehingga ada beberapa method tidak terdapat dalam versi tersebut. Nah dengan rbenv inilah kalian dapat mengontrol versi ruby mana yang akan kalian pakai nantinya.Apa itu rbenv?Rbenv adalah suatu aplikasi yang memiliki tugas mengatur berbagai macam versi ruby dalam satu lingkungan sistem operasi. Dengan adanya rbenv memungkinkan kalian dapat memasang multi versi dari ruby tanpa harus khawatir bentrok dengan dependensi.Mengapa Perlu rbenv?Memaasang ruby dari bawaan manajer paket dari sistem operasi. Biasanya kita hanya akan mendapatkan versi stable-nya saja. Versi stable biasanya versi lawas. Memang bagus dengan versi stable. Akan tetapi, jika kalian memiliki rasa penasaran dengan versi teranyar karena ingin tahu beberapa perubahan maka disitulah gunanya rbenv.Cara Pasang rbenvSebelum memasang rbenv pastikan kalian sudah memasang git. Jika sudah, langsung saja:  Klon repositori rbenv dengan mengikuti perintah berikut:     $ git clone https://github.com/rbenv/rbenv.git ~/.rbenv            Set rbenv di $PATH variabel. Seperti berikut:    Bagi pengguna bash    $ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' &gt;&gt; ~/.bashrc        Bagi pengguna zsh    $ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' &gt;&gt; ~/.zshrc        Set up rbenv di shell kalian.    $ ~/.rbenv/bin/rbenv init        Maka akan keluar informasi berikut:     # Load rbenv automatically by appending # the following to ~/.bashrc: eval \"$(rbenv init -)\"        Nah, tinggal masukan eval \"$(rbenv init -)\" di .bashrc    Restart terminal kalian dengan cara tutup lalu buka kembali.  Pasang plugin ruby-build yang berguna untuk mengkompil kode sumber ruby.    $ mkdir -p \"$(rbenv root)\"/plugins$ git clone https://github.com/rbenv/ruby-build.git \"$(rbenv root)\"/plugins/ruby-build        Cek apakah kalian sudah benar memasang rbenv?    $ curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash        Outpunya:     Checking for `rbenv' in PATH: /home/ali/.rbenv/bin/rbenv Checking for rbenv shims in PATH: OK Checking `rbenv install' support: /home/ali/.rbenv/plugins/ruby-build/bin/rbenv-install (ruby-build 20200115-1-g4082f9e) Counting installed Ruby versions: none   There aren't any Ruby versions installed under `~/.rbenv/versions'.   You can install Ruby versions like so: rbenv install 2.2.4 Checking RubyGems settings: OK Auditing installed plugins: OK      Memasang RubyPemasangan rbenv sudah selesai langkah selanjutnya adalah kita pasang ruby. Adapun cara pasangnya sangatlah mudah, kalian hanya perlu melakukan perintah berikut:$ rbenv install 2.7.0Jika kalian ingin versi ruby yang lainnya, kalian bisa pasang dengan melihat versi yang kalian mau. Berikut caranya:$ rbenv install --listSet Ruby GlobalLangkah terakhir adalah menjadikan ruby yang tadi kita telah pasang dapat diakses di mana saja.$ rbenv global 2.7.0Untuk memastikan bisa kalian tes dengan perintah berikut:$ ruby -vruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]Set Ruby Local DirectoryJika kalian hanya ingin versi ruby lainnya di direktori tertentu. Contoh, saya punya 2 ruby versi 2.7.0 dan 2.6.5. Saya ingin di salah satu direktori projek saya menggunakan ruby 2.6.5 sedangkan yang lain tetap menggunakan ruby 2.7.0. Nah berikut caranya:$ cd /my/ruby/project/$ rbenv local 2.6.5$ ruby -vruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-linux]$ cd ~$ ruby -vruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]Lihat versi di direktori /my/ruby/project menggunakan versi 2.6.5 sedangkan versi globalnya menggunakan 2.7.0",
            "content_html": "<p>Sebelum memulai belajar pemrograman ruby. Langkah pertama tentunya ialah memasang ruby di sistem operasi. Mungkin beberapa sistem operasi sudah terpasang secara asali (default). Contohnya pengguna macOS. Bagi yang belum ada kalian bisa pasang sesuai dengan sistem operasi yang kalian pergunakan.</p><p>Untuk mengetahui kalian sudah memasang ruby atau belum, kalian bisa cek di Terminal Emulator dengan perintah berikut:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span></code></pre></div></div><p>Jika berhasil maka akan keluar informasi seperti ini:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ruby 2.7.0p0 <span class=\"o\">(</span>2019-12-25 revision 647ee6f091<span class=\"o\">)</span> <span class=\"o\">[</span>x86_64-linux]</code></pre></div></div><p>Kalau tidak berarti kalian perlu memasangnya.</p><p>Untuk memasang ruby, saya menyarankan kalian pergunakan <code class=\"highlighter-rouge\">rbenv</code> mengapa? Karena untuk menyamakan versi ruby yang dipakai. Biasanya sistem operasi hanya menyediakan versi ruby tertentu, yang biasanya hanya pada versi ruby lawas. Sehingga ada beberapa method tidak terdapat dalam versi tersebut. Nah dengan rbenv inilah kalian dapat mengontrol versi ruby mana yang akan kalian pakai nantinya.</p><h2 id=\"apa-itu-rbenv\">Apa itu rbenv?</h2><p>Rbenv adalah suatu aplikasi yang memiliki tugas mengatur berbagai macam versi ruby dalam satu lingkungan sistem operasi. Dengan adanya rbenv memungkinkan kalian dapat memasang multi versi dari ruby tanpa harus khawatir bentrok dengan dependensi.</p><h2 id=\"mengapa-perlu-rbenv\">Mengapa Perlu rbenv?</h2><p>Memaasang ruby dari bawaan manajer paket dari sistem operasi. Biasanya kita hanya akan mendapatkan versi stable-nya saja. Versi stable biasanya versi lawas. Memang bagus dengan versi stable. Akan tetapi, jika kalian memiliki rasa penasaran dengan versi teranyar karena ingin tahu beberapa perubahan maka disitulah gunanya rbenv.</p><h2 id=\"cara-pasang-rbenv\">Cara Pasang rbenv</h2><p>Sebelum memasang rbenv pastikan kalian sudah memasang <code class=\"highlighter-rouge\">git</code>. Jika sudah, langsung saja:</p><ol>  <li>Klon repositori rbenv dengan mengikuti perintah berikut:    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git clone https://github.com/rbenv/rbenv.git ~/.rbenv</code></pre></div>    </div>  </li>  <li>    <p>Set rbenv di <code class=\"highlighter-rouge\">$PATH</code> variabel. Seperti berikut:</p>    <p>Bagi pengguna <strong>bash</strong></p>    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">echo</span> <span class=\"s1\">'export PATH=\"$HOME/.rbenv/bin:$PATH\"'</span> <span class=\"o\">&gt;&gt;</span> ~/.bashrc</code></pre></div>    </div>    <p>Bagi pengguna <strong>zsh</strong></p>    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">echo</span> <span class=\"s1\">'export PATH=\"$HOME/.rbenv/bin:$PATH\"'</span> <span class=\"o\">&gt;&gt;</span> ~/.zshrc</code></pre></div>    </div>  </li>  <li>Set up rbenv di shell kalian.    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>~/.rbenv/bin/rbenv init</code></pre></div>    </div>    <p>Maka akan keluar informasi berikut:</p>    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># Load rbenv automatically by appending</span> <span class=\"c\"># the following to ~/.bashrc:</span> <span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span>rbenv init -<span class=\"si\">)</span><span class=\"s2\">\"</span></code></pre></div>    </div>    <p>Nah, tinggal masukan <code class=\"highlighter-rouge\">eval \"$(rbenv init -)\"</code> di <code class=\"highlighter-rouge\">.bashrc</code></p>  </li>  <li>Restart terminal kalian dengan cara tutup lalu buka kembali.</li>  <li>Pasang plugin <code class=\"highlighter-rouge\">ruby-build</code> yang berguna untuk mengkompil kode sumber ruby.    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span>rbenv root<span class=\"si\">)</span><span class=\"s2\">\"</span>/plugins<span class=\"nv\">$ </span>git clone https://github.com/rbenv/ruby-build.git <span class=\"s2\">\"</span><span class=\"si\">$(</span>rbenv root<span class=\"si\">)</span><span class=\"s2\">\"</span>/plugins/ruby-build</code></pre></div>    </div>  </li>  <li>Cek apakah kalian sudah benar memasang rbenv?    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>curl <span class=\"nt\">-fsSL</span> https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash</code></pre></div>    </div>    <p>Outpunya:</p>    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> Checking <span class=\"k\">for</span> <span class=\"sb\">`</span>rbenv<span class=\"s1\">' in PATH: /home/ali/.rbenv/bin/rbenv Checking for rbenv shims in PATH: OK Checking `rbenv install'</span> support: /home/ali/.rbenv/plugins/ruby-build/bin/rbenv-install <span class=\"o\">(</span>ruby-build 20200115-1-g4082f9e<span class=\"o\">)</span> Counting installed Ruby versions: none   There aren<span class=\"s1\">'t any Ruby versions installed under `~/.rbenv/versions'</span><span class=\"nb\">.</span>   You can <span class=\"nb\">install </span>Ruby versions like so: rbenv <span class=\"nb\">install </span>2.2.4 Checking RubyGems settings: OK Auditing installed plugins: OK</code></pre></div>    </div>  </li></ol><h2 id=\"memasang-ruby\">Memasang Ruby</h2><p>Pemasangan rbenv sudah selesai langkah selanjutnya adalah kita pasang ruby. Adapun cara pasangnya sangatlah mudah, kalian hanya perlu melakukan perintah berikut:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rbenv <span class=\"nb\">install </span>2.7.0</code></pre></div></div><p>Jika kalian ingin versi ruby yang lainnya, kalian bisa pasang dengan melihat versi yang kalian mau. Berikut caranya:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rbenv <span class=\"nb\">install</span> <span class=\"nt\">--list</span></code></pre></div></div><h2 id=\"set-ruby-global\">Set Ruby Global</h2><p>Langkah terakhir adalah menjadikan ruby yang tadi kita telah pasang dapat diakses di mana saja.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rbenv global 2.7.0</code></pre></div></div><p>Untuk memastikan bisa kalian tes dengan perintah berikut:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span>ruby 2.7.0p0 <span class=\"o\">(</span>2019-12-25 revision 647ee6f091<span class=\"o\">)</span> <span class=\"o\">[</span>x86_64-linux]</code></pre></div></div><h2 id=\"set-ruby-local-directory\">Set Ruby Local Directory</h2><p>Jika kalian hanya ingin versi ruby lainnya di direktori tertentu. Contoh, saya punya 2 ruby versi 2.7.0 dan 2.6.5. Saya ingin di salah satu direktori projek saya menggunakan ruby 2.6.5 sedangkan yang lain tetap menggunakan ruby 2.7.0. Nah berikut caranya:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">cd</span> /my/ruby/project/<span class=\"nv\">$ </span>rbenv <span class=\"nb\">local </span>2.6.5<span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span>ruby 2.6.5p114 <span class=\"o\">(</span>2019-10-01 revision 67812<span class=\"o\">)</span> <span class=\"o\">[</span>x86_64-linux]<span class=\"nv\">$ </span><span class=\"nb\">cd</span> ~<span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span>ruby 2.7.0p0 <span class=\"o\">(</span>2019-12-25 revision 647ee6f091<span class=\"o\">)</span> <span class=\"o\">[</span>x86_64-linux]</code></pre></div></div><p>Lihat versi di direktori <code class=\"highlighter-rouge\">/my/ruby/project</code> menggunakan versi 2.6.5 sedangkan versi globalnya menggunakan 2.7.0</p>",
            "url": "http://localhost:4000/install-rbenv",
            
            
            
            
            
            "date_published": "2020-01-31T21:47:37+07:00",
            "date_modified": "2020-01-31T21:47:37+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        }
    
    ]
}