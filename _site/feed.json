{
    "version": "https://jsonfeed.org/version/1",
    "title": "RubyHolic",
    "home_page_url": "http://localhost:4000/",
    "feed_url": "http://localhost:4000/feed.json",
    "description": "Ketika menjadi Ruby Developer",
    "icon": "http://localhost:4000/apple-touch-icon.png",
    "favicon": "http://localhost:4000/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "Ali",
        "url": "www.situsali.id",
        "avatar": null
    },
    
"items": [
    
        {
            "id": "http://localhost:4000/rspec-setup-capybara-dengan-selenium-firefox-dan-chrome-driver",
            "title": "Rspec - Setup Capybara dengan Selenium Firefox dan Chrome Driver",
            "summary": null,
            "content_text": "Asumsi saya kalian sudah paham dengan Rspec dan Capybara. Sedikit introduksi saja, capybara adalah suatu tools yang digunakan untuk membuat acceptence test atau feature test jika di rspec.Berikut ini cara mengintegrasikan capybara dengan selenium dengan driver Firefox dan Google Chrome.Langsung Praktek      Tambahkan gem capybara, rspec-rails dan webdrivers pada Gemfile di project rails kalian:     .. group :test do gem 'capybara' gem 'rspec-rails' gem 'webdrivers' ...            Kemudian unduh chromedriver melalui tautan berikut: https://chromedriver.chromium.org/downloads        Sunting berkas rails_helper.rb lalu tambahkan skrip di bawah ini:     require 'capybara/rspec' RSpec.configure do |config|     Capybara.server = :puma, { Silent: true }     Capybara.run_server = true     Capybara.register_driver :headless_chrome do |app| \tcaps = Selenium::WebDriver::Remote::Capabilities.chrome(loggingPrefs: { browser: 'ALL' }) \topts = Selenium::WebDriver::Chrome::Options.new \tchrome_args = %w[--headless --no-sandbox --disable-gpu --window-size=1920,1080 --remote-debugging-port=9222] \tchrome_args.each { |arg| opts.add_argument(arg) } \tCapybara::Selenium::Driver.new(app, browser: :chrome, options: opts, desired_capabilities: caps)     end     Capybara.register_driver :chrome do |app| \tCapybara::Selenium::Driver.new app, :browser =&gt; :chrome     end     Capybara.register_driver :firefox do |app| \tprofile = Selenium::WebDriver::Firefox::Profile.new \tprofile['plugin.state.flash'] = 0 \tprofile['browser.download.dir'] = DownloadHelper::DOWNLOAD_PATH.to_s \tprofile['browser.download.folderList'] = 2 \tprofile['browser.helperApps.neverAsk.saveToDisk'] = 'text/csv' \tfirefox_options = { firefox_profile: profile } \tif ENV['SELENIUM_FIREFOX_PATH'] \t    firefox_options[:firefox_binary] = ENV['SELENIUM_FIREFOX_PATH'] \tend \tcapabilities = Selenium::WebDriver::Remote::Capabilities.firefox(firefox_options) \tCapybara::Selenium::Driver.new(app, browser: :remote, url: \"http://#{SELENIUM_SERVER}:4444/wd/hub\", desired_capabilities: capabilities)     end     Capybara.default_driver = :headless_chrome     Capybara.javascript_driver = :headless_chrome end      Selesai sekarang kalian bisa jalankan feature test kalian di rspec, dengan selenium. Skrip di atas, default drivernya adalah headless_chrome. Kalau mau pakai Firefox atau Google Chrome browser bisa langsung kalian ganti saja menjadi :firefox atau :chrome.TambahanSebagai tambahan kalau kalian ingin buat selenium browser untuk Opera Mini, kalian bisa lakukan dengan mengganti user-agentnya seperti berikut:Capybara.register_driver :opera_mini do |app|  profile = Selenium::WebDriver::Firefox::Profile.new  profile['general.useragent.override'] = 'Opera/9.80 (Android; Opera Mini/7.6.35766/35.5706; U; en) Presto/2.8.119 Version/11.10'  firefox_options = { firefox_profile: profile }  if ENV['SELENIUM_FIREFOX_PATH']    firefox_options[:firefox_binary] = ENV['SELENIUM_FIREFOX_PATH']  end  capabilities = Selenium::WebDriver::Remote::Capabilities.firefox(firefox_options)  Capybara::Selenium::Driver.new(app, browser: :remote, url: \"http://#{SELENIUM_SERVER}:4444/wd/hub\", desired_capabilities: capabilities)endSemoga bermanfaat :)",
            "content_html": "<p>Asumsi saya kalian sudah paham dengan Rspec dan Capybara. Sedikit introduksi saja, capybara adalah suatu tools yang digunakan untuk membuat acceptence test atau feature test jika di rspec.</p><p>Berikut ini cara mengintegrasikan capybara dengan selenium dengan driver Firefox dan Google Chrome.</p><h2 id=\"langsung-praktek\">Langsung Praktek</h2><ol>  <li>    <p>Tambahkan gem <code class=\"highlighter-rouge\">capybara</code>, <code class=\"highlighter-rouge\">rspec-rails</code> dan <code class=\"highlighter-rouge\">webdrivers</code> pada Gemfile di project rails kalian:</p>    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"o\">..</span> <span class=\"n\">group</span> <span class=\"ss\">:test</span> <span class=\"k\">do</span> <span class=\"n\">gem</span> <span class=\"s1\">'capybara'</span> <span class=\"n\">gem</span> <span class=\"s1\">'rspec-rails'</span> <span class=\"n\">gem</span> <span class=\"s1\">'webdrivers'</span> <span class=\"o\">...</span></code></pre></div>    </div>  </li>  <li>    <p>Kemudian unduh <code class=\"highlighter-rouge\">chromedriver</code> melalui tautan berikut: <a href=\"https://chromedriver.chromium.org/downloads\">https://chromedriver.chromium.org/downloads</a></p>  </li>  <li>    <p>Sunting berkas <code class=\"highlighter-rouge\">rails_helper.rb</code> lalu tambahkan skrip di bawah ini:</p>    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nb\">require</span> <span class=\"s1\">'capybara/rspec'</span> <span class=\"no\">RSpec</span><span class=\"p\">.</span><span class=\"nf\">configure</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">server</span> <span class=\"o\">=</span> <span class=\"ss\">:puma</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"no\">Silent</span><span class=\"p\">:</span> <span class=\"kp\">true</span> <span class=\"p\">}</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">run_server</span> <span class=\"o\">=</span> <span class=\"kp\">true</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">register_driver</span> <span class=\"ss\">:headless_chrome</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">app</span><span class=\"o\">|</span> \t<span class=\"n\">caps</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Remote</span><span class=\"o\">::</span><span class=\"no\">Capabilities</span><span class=\"p\">.</span><span class=\"nf\">chrome</span><span class=\"p\">(</span><span class=\"ss\">loggingPrefs: </span><span class=\"p\">{</span> <span class=\"ss\">browser: </span><span class=\"s1\">'ALL'</span> <span class=\"p\">})</span> \t<span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Chrome</span><span class=\"o\">::</span><span class=\"no\">Options</span><span class=\"p\">.</span><span class=\"nf\">new</span> \t<span class=\"n\">chrome_args</span> <span class=\"o\">=</span> <span class=\"sx\">%w[--headless --no-sandbox --disable-gpu --window-size=1920,1080 --remote-debugging-port=9222]</span> \t<span class=\"n\">chrome_args</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"p\">{</span> <span class=\"o\">|</span><span class=\"n\">arg</span><span class=\"o\">|</span> <span class=\"n\">opts</span><span class=\"p\">.</span><span class=\"nf\">add_argument</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span> <span class=\"p\">}</span> \t<span class=\"no\">Capybara</span><span class=\"o\">::</span><span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">Driver</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"ss\">browser: :chrome</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"n\">opts</span><span class=\"p\">,</span> <span class=\"ss\">desired_capabilities: </span><span class=\"n\">caps</span><span class=\"p\">)</span>     <span class=\"k\">end</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">register_driver</span> <span class=\"ss\">:chrome</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">app</span><span class=\"o\">|</span> \t<span class=\"no\">Capybara</span><span class=\"o\">::</span><span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">Driver</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"ss\">:browser</span> <span class=\"o\">=&gt;</span> <span class=\"ss\">:chrome</span>     <span class=\"k\">end</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">register_driver</span> <span class=\"ss\">:firefox</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">app</span><span class=\"o\">|</span> \t<span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Firefox</span><span class=\"o\">::</span><span class=\"no\">Profile</span><span class=\"p\">.</span><span class=\"nf\">new</span> \t<span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'plugin.state.flash'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span> \t<span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'browser.download.dir'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"no\">DownloadHelper</span><span class=\"o\">::</span><span class=\"no\">DOWNLOAD_PATH</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> \t<span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'browser.download.folderList'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> \t<span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'browser.helperApps.neverAsk.saveToDisk'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'text/csv'</span> \t<span class=\"n\">firefox_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">firefox_profile: </span><span class=\"n\">profile</span> <span class=\"p\">}</span> \t<span class=\"k\">if</span> <span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'SELENIUM_FIREFOX_PATH'</span><span class=\"p\">]</span> \t    <span class=\"n\">firefox_options</span><span class=\"p\">[</span><span class=\"ss\">:firefox_binary</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'SELENIUM_FIREFOX_PATH'</span><span class=\"p\">]</span> \t<span class=\"k\">end</span> \t<span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Remote</span><span class=\"o\">::</span><span class=\"no\">Capabilities</span><span class=\"p\">.</span><span class=\"nf\">firefox</span><span class=\"p\">(</span><span class=\"n\">firefox_options</span><span class=\"p\">)</span> \t<span class=\"no\">Capybara</span><span class=\"o\">::</span><span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">Driver</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"ss\">browser: :remote</span><span class=\"p\">,</span> <span class=\"ss\">url: </span><span class=\"s2\">\"http://</span><span class=\"si\">#{</span><span class=\"no\">SELENIUM_SERVER</span><span class=\"si\">}</span><span class=\"s2\">:4444/wd/hub\"</span><span class=\"p\">,</span> <span class=\"ss\">desired_capabilities: </span><span class=\"n\">capabilities</span><span class=\"p\">)</span>     <span class=\"k\">end</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">default_driver</span> <span class=\"o\">=</span> <span class=\"ss\">:headless_chrome</span>     <span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">javascript_driver</span> <span class=\"o\">=</span> <span class=\"ss\">:headless_chrome</span> <span class=\"k\">end</span></code></pre></div>    </div>  </li></ol><p>Selesai sekarang kalian bisa jalankan feature test kalian di rspec, dengan selenium. Skrip di atas, default drivernya adalah <code class=\"highlighter-rouge\">headless_chrome</code>. Kalau mau pakai Firefox atau Google Chrome browser bisa langsung kalian ganti saja menjadi <code class=\"highlighter-rouge\">:firefox</code> atau <code class=\"highlighter-rouge\">:chrome</code>.</p><h2 id=\"tambahan\">Tambahan</h2><p>Sebagai tambahan kalau kalian ingin buat selenium browser untuk Opera Mini, kalian bisa lakukan dengan mengganti user-agentnya seperti berikut:</p><div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">Capybara</span><span class=\"p\">.</span><span class=\"nf\">register_driver</span> <span class=\"ss\">:opera_mini</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">app</span><span class=\"o\">|</span>  <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Firefox</span><span class=\"o\">::</span><span class=\"no\">Profile</span><span class=\"p\">.</span><span class=\"nf\">new</span>  <span class=\"n\">profile</span><span class=\"p\">[</span><span class=\"s1\">'general.useragent.override'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Opera/9.80 (Android; Opera Mini/7.6.35766/35.5706; U; en) Presto/2.8.119 Version/11.10'</span>  <span class=\"n\">firefox_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">firefox_profile: </span><span class=\"n\">profile</span> <span class=\"p\">}</span>  <span class=\"k\">if</span> <span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'SELENIUM_FIREFOX_PATH'</span><span class=\"p\">]</span>    <span class=\"n\">firefox_options</span><span class=\"p\">[</span><span class=\"ss\">:firefox_binary</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'SELENIUM_FIREFOX_PATH'</span><span class=\"p\">]</span>  <span class=\"k\">end</span>  <span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">WebDriver</span><span class=\"o\">::</span><span class=\"no\">Remote</span><span class=\"o\">::</span><span class=\"no\">Capabilities</span><span class=\"p\">.</span><span class=\"nf\">firefox</span><span class=\"p\">(</span><span class=\"n\">firefox_options</span><span class=\"p\">)</span>  <span class=\"no\">Capybara</span><span class=\"o\">::</span><span class=\"no\">Selenium</span><span class=\"o\">::</span><span class=\"no\">Driver</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"ss\">browser: :remote</span><span class=\"p\">,</span> <span class=\"ss\">url: </span><span class=\"s2\">\"http://</span><span class=\"si\">#{</span><span class=\"no\">SELENIUM_SERVER</span><span class=\"si\">}</span><span class=\"s2\">:4444/wd/hub\"</span><span class=\"p\">,</span> <span class=\"ss\">desired_capabilities: </span><span class=\"n\">capabilities</span><span class=\"p\">)</span><span class=\"k\">end</span></code></pre></div></div><p>Semoga bermanfaat :)</p>",
            "url": "http://localhost:4000/rspec-setup-capybara-dengan-selenium-firefox-dan-chrome-driver",
            
            
            
            
            
            "date_published": "2020-04-08T17:09:00+07:00",
            "date_modified": "2020-04-08T17:09:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/menghilangkan-deprecation-warning-ketika-menggunakan-ruby-2-7-x",
            "title": "Menghilangkan Deprecation Warning Ketika Menggunakan Ruby 2.7.x",
            "summary": null,
            "content_text": "Sewaktu menulis tentang rbenv, saya menyarankan agar kalian menggunakan ruby terbaru. Untuk saat ini April 2020 versi terbaru dari ruby ialah 2.7.0.Pada saat kalian memasang Rails di ruby 2.7.0, ketika dijalankan. Kalian akan mendapatkan pesan peringatan deprecation (kode sudah usang). Memang peringatan tersebut tidak mempengaruhi aplikasi. Rails tetap berjalan dengan normal.Namun saya rasa kalian akan merasa jengkel karena peringatan kode usangnya sangatlah banyak. Sejujurnya saya sendiri juga jengkel.Untuk mengatasi masalah tersebut, ternyata caranya cukup mudah kita hanya perlu menambahkan perintah berikut:RUBYOPT='-W:no-deprecated -W:no-experimental'Diawal perintah rails. Contohnya begini. Kalau kalian ingin menjalankan rails s cukup tambahin local variable di atas. Jadi seperti berikut:RUBYOPT='-W:no-deprecated -W:no-experimental' rails sGampang kan?. Biar lebih gampang lagi kalian bisa export variable di atas dan menarunya di .bashrc.export RUBYOPT='-W:no-deprecated -W:no-experimental'Selanjutnya kalian bisa langsung menjalankan Rails tanpa ada deprecation warning lagi :)",
            "content_html": "<p>Sewaktu menulis tentang <a href=\"https://rubyholic.github.io/install-rbenv\">rbenv</a>, saya menyarankan agar kalian menggunakan ruby terbaru. Untuk saat ini April 2020 versi terbaru dari ruby ialah 2.7.0.</p><p>Pada saat kalian memasang Rails di ruby 2.7.0, ketika dijalankan. Kalian akan mendapatkan pesan peringatan <code class=\"highlighter-rouge\">deprecation</code> (kode sudah usang). Memang peringatan tersebut tidak mempengaruhi aplikasi. Rails tetap berjalan dengan normal.</p><p>Namun saya rasa kalian akan merasa jengkel karena peringatan kode usangnya sangatlah banyak. Sejujurnya saya sendiri juga jengkel.</p><p>Untuk mengatasi masalah tersebut, ternyata caranya cukup mudah kita hanya perlu menambahkan perintah berikut:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">RUBYOPT</span><span class=\"o\">=</span><span class=\"s1\">'-W:no-deprecated -W:no-experimental'</span></code></pre></div></div><p>Diawal perintah <code class=\"highlighter-rouge\">rails</code>. Contohnya begini. Kalau kalian ingin menjalankan <code class=\"highlighter-rouge\">rails s</code> cukup tambahin local variable di atas. Jadi seperti berikut:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">RUBYOPT</span><span class=\"o\">=</span><span class=\"s1\">'-W:no-deprecated -W:no-experimental'</span> rails s</code></pre></div></div><p>Gampang kan?. Biar lebih gampang lagi kalian bisa <code class=\"highlighter-rouge\">export</code> variable di atas dan menarunya di <code class=\"highlighter-rouge\">.bashrc</code>.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">export </span><span class=\"nv\">RUBYOPT</span><span class=\"o\">=</span><span class=\"s1\">'-W:no-deprecated -W:no-experimental'</span></code></pre></div></div><p>Selanjutnya kalian bisa langsung menjalankan Rails tanpa ada deprecation warning lagi :)</p>",
            "url": "http://localhost:4000/menghilangkan-deprecation-warning-ketika-menggunakan-ruby-2-7-x",
            
            
            
            
            
            "date_published": "2020-04-02T21:59:00+07:00",
            "date_modified": "2020-04-02T21:59:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/integrasi-bulma-dan-material-design-icon-di-rails-6-dengan-webpacker",
            "title": "Integrasi Bulma dan Material Design Icon di Rails 6 dengan Webpacker",
            "summary": null,
            "content_text": "Bulma merupakan salah satu CSS fremework yang sedang naik daun saat ini. Salah satu yang saya suka dari Bulma adalah ia hanya CSS tanpa JS, berbeda dengan Bootstrap yang memerlukan JS (jQuery, popper.js). Karena Bulma hanya CSS otomatis cara integrasi di Rails 6 dengan Webpacker sangatlah mudah.Berikut ini cara integrasi Bulma di Rails 6 dengan Webpacker:BulmaPertama-tama tambahkan dulu Bulma dengan yarn.yarn add bulmaKemudian tinggal kita import dengan edit pada file app/javascript/packs/application.js lalu isi dengan skrip berikutimport \"bulma\"Selesai kalian tinggal compile assets nya dengan perintah berikut:rails assets:precompileUntuk mengetes Bulma suda berjalan di Rails, kalian tinggal coba ambil sample code di dokumentasi Bulma.Material Design IconNah, kalau Material Design Icon atau disingkat dengan MDI sama seperti Fontawesome yakni web font. Integrasi MDI di Rails juga sangat mudah. Yang pertama dilakukan adalah:Tambahkan MDI dengan yarn:yarn add @mdi/fontLalu jangan lupa import css di app/javascript/packs/application.js isi dengan skrip berikut:import '@mdi/font/scss/materialdesignicons';Seperti biasa jika kita menambahkan assets wajib untuk melakukan precompile di Rails agar assets tersebut dapat dipanggil.rails assets:precompileSekarang kalian tinggal coba di view kalian. Contohnya:&lt;i class=\"mdi mdi-account-circle\"&gt;&lt;/i&gt;Semoga bermanfaat :)",
            "content_html": "<p>Bulma merupakan salah satu CSS fremework yang sedang naik daun saat ini. Salah satu yang saya suka dari Bulma adalah ia hanya CSS tanpa JS, berbeda dengan Bootstrap yang memerlukan JS (jQuery, popper.js). Karena Bulma hanya CSS otomatis cara integrasi di Rails 6 dengan Webpacker sangatlah mudah.</p><p>Berikut ini cara integrasi Bulma di Rails 6 dengan Webpacker:</p><h2 id=\"bulma\">Bulma</h2><p>Pertama-tama tambahkan dulu Bulma dengan yarn.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>yarn add bulma</code></pre></div></div><p>Kemudian tinggal kita import dengan edit pada file <code class=\"highlighter-rouge\">app/javascript/packs/application.js</code> lalu isi dengan skrip berikut</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">bulma</span><span class=\"dl\">\"</span></code></pre></div></div><p>Selesai kalian tinggal compile assets nya dengan perintah berikut:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails assets:precompile</code></pre></div></div><p>Untuk mengetes Bulma suda berjalan di Rails, kalian tinggal coba ambil sample code di dokumentasi Bulma.</p><h2 id=\"material-design-icon\">Material Design Icon</h2><p>Nah, kalau Material Design Icon atau disingkat dengan MDI sama seperti Fontawesome yakni web font. Integrasi MDI di Rails juga sangat mudah. Yang pertama dilakukan adalah:</p><p>Tambahkan MDI dengan yarn:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>yarn add @mdi/font</code></pre></div></div><p>Lalu jangan lupa import css di <code class=\"highlighter-rouge\">app/javascript/packs/application.js</code> isi dengan skrip berikut:</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">@mdi/font/scss/materialdesignicons</span><span class=\"dl\">'</span><span class=\"p\">;</span></code></pre></div></div><p>Seperti biasa jika kita menambahkan assets wajib untuk melakukan precompile di Rails agar assets tersebut dapat dipanggil.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rails assets:precompile</code></pre></div></div><p>Sekarang kalian tinggal coba di view kalian. Contohnya:</p><div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"mdi mdi-account-circle\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span></code></pre></div></div><p>Semoga bermanfaat :)</p>",
            "url": "http://localhost:4000/integrasi-bulma-dan-material-design-icon-di-rails-6-dengan-webpacker",
            
            
            
            
            
            "date_published": "2020-03-31T11:04:00+07:00",
            "date_modified": "2020-03-31T11:04:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/script-mengganti-versi-pada-file-migration",
            "title": "Script Mengganti Versi pada File Migration",
            "summary": null,
            "content_text": "Ketika upgrade Rails, saya melakukan drop database. Tujuannya untuk memastikan seluruhnya berjalan dengan baik, jika aplikasi saya di setup dari awal. Yang terjadi adalah tidak saya mengalami error seperti berikut:StandardError: An error has occurred, this and all later migrations canceled:Directly inheriting from ActiveRecord::Migration is not supported. Please specify the Rails release the migration was written for:  class RolifyCreateRoles &lt; ActiveRecord::Migration[4.2]Skripnya sebagai berikut:Khusus Pengguna GNU/Linuxgrep -rl \"ActiveRecord::Migration$\" db | xargs sed -i 's/ActiveRecord::Migration/ActiveRecord::Migration[5.1]/g'Pengguna macOSgrep -rl \"ActiveRecord::Migration$\" db | xargs sed -i \"\" \"s/ActiveRecord::Migration/ActiveRecord::Migration[5.1]/g\"Sumberhttps://github.com/RolifyCommunity/rolify/issues/444",
            "content_html": "<p>Ketika upgrade Rails, saya melakukan drop database. Tujuannya untuk memastikan seluruhnya berjalan dengan baik, jika aplikasi saya di setup dari awal. Yang terjadi adalah tidak saya mengalami error seperti berikut:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>StandardError: An error has occurred, this and all later migrations canceled:Directly inheriting from ActiveRecord::Migration is not supported. Please specify the Rails release the migration was written for:  class RolifyCreateRoles &lt; ActiveRecord::Migration[4.2]</code></pre></div></div><p>Skripnya sebagai berikut:</p><h2 id=\"khusus-pengguna-gnulinux\">Khusus Pengguna GNU/Linux</h2><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">grep</span> <span class=\"nt\">-rl</span> <span class=\"s2\">\"ActiveRecord::Migration$\"</span> db | xargs <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">'s/ActiveRecord::Migration/ActiveRecord::Migration[5.1]/g'</span></code></pre></div></div><h2 id=\"pengguna-macos\">Pengguna macOS</h2><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">grep</span> <span class=\"nt\">-rl</span> <span class=\"s2\">\"ActiveRecord::Migration$\"</span> db | xargs <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"s/ActiveRecord::Migration/ActiveRecord::Migration[5.1]/g\"</span></code></pre></div></div><h2 id=\"sumber\">Sumber</h2><p><a href=\"https://github.com/RolifyCommunity/rolify/issues/444\">https://github.com/RolifyCommunity/rolify/issues/444</a></p>",
            "url": "http://localhost:4000/script-mengganti-versi-pada-file-migration",
            
            
            
            
            
            "date_published": "2020-03-23T15:04:00+07:00",
            "date_modified": "2020-03-23T15:04:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/menjalankan-rails-6-di-nginx-dengan-puma",
            "title": "Menjalankan Rails 6 di Nginx dengan Puma",
            "summary": null,
            "content_text": "Mendaringkan aplikasi rails. Kita bisa memanfaatkan puma sebagai reverse-proxy yang nantinya bisa kita integrasikan dengan nginx. Berikut ini caranya:Pertama-tama kita sunting berkas config/puma.rb:## letakan app_dir paling atasapp_dir = File.expand_path '../..', __FILE__### untuk bind bebas mau ditaru di mana pun, yang terpenting sesudah app_dirbind ENV.fetch(\"SOCKETFILE\") { \"unix://#{app_dir}/tmp/sockets/puma.sock\" }Kemudian buat service file menggunakan systemd:$ sudo touch /etc/systemd/system/puma.service$ sudo vim /etc/systemd/system/puma.serviceAsumsi berkas rails kalian terletak di /home/web/rails, skrip systemd -nya sebagai berikut:[Unit]Description=Puma Rails ServerAfter=network.target[Service]Type=simpleUser=webWorkingDirectory=/home/web/rails/ExecStart=/home/web/.rbenv/shims/puma -C /home/web/rails/config/puma.rb /home/web/rails/config.ruExecStop=/home/web/.rbenv/shims/pumactl -S /home/web/rails/tmp/pids/server.pid stopTimeoutSec=15Restart=always[Install]WantedBy=multi-user.targetPada skrip di atas puma berada di direktori .rbenv/shims ini karena contoh di sini untuk pengguna rbenv. Untuk memastikan di mana puma berada kalian bisa menggunakan perintah which, contoh:$ which puma$ which pumactlSetelah selesai, tinggal kita reload dan jalankan puma -nya.$ sudo systemctl daemon-reload$ sudo systemctl start puma.service$ sudo systemctl status pumaJika sudah hijau berati kita sudah berhasil membuat puma dengan systemd.Langkah selanjutnya adalah kita buat server block di Nginx. Dan masukan konfirgurasinya seperti berikut:upstream app {    server unix:///home/web/rails/tmp/sockets/puma.sock;}server {    root /home/web/rails/public/;    location / {\ttry_files $uri @app;    }    location @app {\tproxy_pass http://app;\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\tproxy_set_header Host $http_host;\tproxy_redirect off;    }}Khusus Pengguna httpsUbah pada baris @app menjadi seperti berikut:....location @app {    proxy_pass http://app;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    proxy_set_header Host $http_host;    proxy_set_header X-Forwarded-Ssl on;    proxy_redirect off;}Terakhir tinggal kita restart nginx$ sudo nginx -t$ sudo systemctl restart nginx",
            "content_html": "<p>Mendaringkan aplikasi <code class=\"highlighter-rouge\">rails</code>. Kita bisa memanfaatkan <code class=\"highlighter-rouge\">puma</code> sebagai <code class=\"highlighter-rouge\">reverse-proxy</code> yang nantinya bisa kita integrasikan dengan <code class=\"highlighter-rouge\">nginx</code>. Berikut ini caranya:</p><p>Pertama-tama kita sunting berkas <code class=\"highlighter-rouge\">config/puma.rb</code>:</p><div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">## letakan app_dir paling atas</span><span class=\"n\">app_dir</span> <span class=\"o\">=</span> <span class=\"no\">File</span><span class=\"p\">.</span><span class=\"nf\">expand_path</span> <span class=\"s1\">'../..'</span><span class=\"p\">,</span> <span class=\"kp\">__FILE__</span><span class=\"c1\">### untuk bind bebas mau ditaru di mana pun, yang terpenting sesudah app_dir</span><span class=\"n\">bind</span> <span class=\"no\">ENV</span><span class=\"p\">.</span><span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"s2\">\"SOCKETFILE\"</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"s2\">\"unix://</span><span class=\"si\">#{</span><span class=\"n\">app_dir</span><span class=\"si\">}</span><span class=\"s2\">/tmp/sockets/puma.sock\"</span> <span class=\"p\">}</span></code></pre></div></div><p>Kemudian buat <em>service file</em> menggunakan <code class=\"highlighter-rouge\">systemd</code>:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo touch</span> /etc/systemd/system/puma.service<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>vim /etc/systemd/system/puma.service</code></pre></div></div><p>Asumsi berkas <code class=\"highlighter-rouge\">rails</code> kalian terletak di <code class=\"highlighter-rouge\">/home/web/rails</code>, skrip <code class=\"highlighter-rouge\">systemd</code> -nya sebagai berikut:</p><div class=\"language-ini highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[Unit]</span><span class=\"py\">Description</span><span class=\"p\">=</span><span class=\"s\">Puma Rails Server</span><span class=\"py\">After</span><span class=\"p\">=</span><span class=\"s\">network.target</span><span class=\"nn\">[Service]</span><span class=\"py\">Type</span><span class=\"p\">=</span><span class=\"s\">simple</span><span class=\"py\">User</span><span class=\"p\">=</span><span class=\"s\">web</span><span class=\"py\">WorkingDirectory</span><span class=\"p\">=</span><span class=\"s\">/home/web/rails/</span><span class=\"py\">ExecStart</span><span class=\"p\">=</span><span class=\"s\">/home/web/.rbenv/shims/puma -C /home/web/rails/config/puma.rb /home/web/rails/config.ru</span><span class=\"py\">ExecStop</span><span class=\"p\">=</span><span class=\"s\">/home/web/.rbenv/shims/pumactl -S /home/web/rails/tmp/pids/server.pid stop</span><span class=\"py\">TimeoutSec</span><span class=\"p\">=</span><span class=\"s\">15</span><span class=\"py\">Restart</span><span class=\"p\">=</span><span class=\"s\">always</span><span class=\"nn\">[Install]</span><span class=\"py\">WantedBy</span><span class=\"p\">=</span><span class=\"s\">multi-user.target</span></code></pre></div></div><p>Pada skrip di atas <code class=\"highlighter-rouge\">puma</code> berada di direktori <code class=\"highlighter-rouge\">.rbenv/shims</code> ini karena contoh di sini untuk pengguna <a href=\"https://rubyholic.github.io/rbenv/2020/01/31/install-rbenv.html\">rbenv</a>. Untuk memastikan di mana <code class=\"highlighter-rouge\">puma</code> berada kalian bisa menggunakan perintah <code class=\"highlighter-rouge\">which</code>, contoh:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>which puma<span class=\"nv\">$ </span>which pumactl</code></pre></div></div><p>Setelah selesai, tinggal kita <em>reload</em> dan jalankan <code class=\"highlighter-rouge\">puma</code> -nya.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl daemon-reload<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl start puma.service<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl status puma</code></pre></div></div><p>Jika sudah hijau berati kita sudah berhasil membuat <code class=\"highlighter-rouge\">puma</code> dengan <code class=\"highlighter-rouge\">systemd</code>.Langkah selanjutnya adalah kita buat <code class=\"highlighter-rouge\">server block</code> di Nginx. Dan masukan konfirgurasinya seperti berikut:</p><div class=\"language-nginx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">upstream</span> <span class=\"s\">app</span> <span class=\"p\">{</span>    <span class=\"kn\">server</span> <span class=\"s\">unix:///home/web/rails/tmp/sockets/puma.sock</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"k\">server</span> <span class=\"p\">{</span>    <span class=\"kn\">root</span> <span class=\"n\">/home/web/rails/public/</span><span class=\"p\">;</span>    <span class=\"kn\">location</span> <span class=\"n\">/</span> <span class=\"p\">{</span>\t<span class=\"kn\">try_files</span> <span class=\"nv\">$uri</span> <span class=\"s\">@app</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"kn\">location</span> <span class=\"s\">@app</span> <span class=\"p\">{</span>\t<span class=\"kn\">proxy_pass</span> <span class=\"s\">http://app</span><span class=\"p\">;</span>\t<span class=\"kn\">proxy_set_header</span> <span class=\"s\">X-Forwarded-For</span> <span class=\"nv\">$proxy_add_x_forwarded_for</span><span class=\"p\">;</span>\t<span class=\"kn\">proxy_set_header</span> <span class=\"s\">Host</span> <span class=\"nv\">$http_host</span><span class=\"p\">;</span>\t<span class=\"kn\">proxy_redirect</span> <span class=\"no\">off</span><span class=\"p\">;</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><h3 id=\"khusus-pengguna-https\">Khusus Pengguna https</h3><p>Ubah pada baris <code class=\"highlighter-rouge\">@app</code> menjadi seperti berikut:</p><div class=\"language-nginx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">....</span><span class=\"s\">location</span> <span class=\"s\">@app</span> <span class=\"p\">{</span>    <span class=\"kn\">proxy_pass</span> <span class=\"s\">http://app</span><span class=\"p\">;</span>    <span class=\"kn\">proxy_set_header</span> <span class=\"s\">X-Forwarded-For</span> <span class=\"nv\">$proxy_add_x_forwarded_for</span><span class=\"p\">;</span>    <span class=\"kn\">proxy_set_header</span> <span class=\"s\">Host</span> <span class=\"nv\">$http_host</span><span class=\"p\">;</span>    <span class=\"kn\">proxy_set_header</span> <span class=\"s\">X-Forwarded-Ssl</span> <span class=\"no\">on</span><span class=\"p\">;</span>    <span class=\"kn\">proxy_redirect</span> <span class=\"no\">off</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><p>Terakhir tinggal kita <em>restart</em> <code class=\"highlighter-rouge\">nginx</code></p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>nginx <span class=\"nt\">-t</span><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl restart nginx</code></pre></div></div>",
            "url": "http://localhost:4000/menjalankan-rails-6-di-nginx-dengan-puma",
            
            
            
            "tags": ["rails6","puma","nginx"],
            
            "date_published": "2020-02-25T14:48:00+07:00",
            "date_modified": "2020-02-25T14:48:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/integrasi-bootstrap-di-rails-6-dengan-webpack",
            "title": "Integrasi Bootstrap di Rails 6 dengan Webpack",
            "summary": null,
            "content_text": "Jika kalian terbiasa dengan css framework seperti bootstrap mungkin kalian akan mengintegrasikan pula pada projek rails kalian. Kali ini saya ingin berbagi mengenai cara mengintegrasikan bootstrap di rails 6.Dikarenakan rails 6 sudah memakai webpack jadi kita dapat dengan mudah memasang bootstrap dari yarn. Berikut caranya:$ yarn add bootstrap jquery popper.jsKemudian tambahkan skrip di bawah ini di berkas config/webpack/environment.js :const { environment } = require('@rails/webpacker')const webpack = require('webpack')environment.plugins.append('Provide',    new webpack.ProvidePlugin({\t$: 'jquery',\tjQuery: 'jquery',\tPopper: ['popper.js', 'default']    }))module.exports = environmentKemudian tambahkan juga skrip di bawah ini pada berkas app/javascript/packs/application.js :import 'bootstrap'import './src/application.scss'Selanjutnya buat direktori:$ mkdir app/javascript/packs/src$ cd app/javascript/packs/srcDan buat berkas di dalamnya bernama application.scss$ touch application.scss$ vim application.scssKemudian isi dengan skrip di bawah ini:@import '~bootstrap/scss/bootstrap';Langkah terakhir:$ rails assets:precompile$ rails webpacker:compileSekarang rails kalian sudah terintegrasi dengan bootstrap",
            "content_html": "<p>Jika kalian terbiasa dengan css framework seperti <code class=\"highlighter-rouge\">bootstrap</code> mungkin kalian akan mengintegrasikan pula pada projek <code class=\"highlighter-rouge\">rails</code> kalian. Kali ini saya ingin berbagi mengenai cara mengintegrasikan <code class=\"highlighter-rouge\">bootstrap</code> di <code class=\"highlighter-rouge\">rails 6</code>.</p><p>Dikarenakan <code class=\"highlighter-rouge\">rails 6</code> sudah memakai <code class=\"highlighter-rouge\">webpack</code> jadi kita dapat dengan mudah memasang <code class=\"highlighter-rouge\">bootstrap</code> dari <code class=\"highlighter-rouge\">yarn</code>. Berikut caranya:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>yarn add bootstrap jquery popper.js</code></pre></div></div><p>Kemudian tambahkan skrip di bawah ini di berkas <code class=\"highlighter-rouge\">config/webpack/environment.js</code> :</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">environment</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">@rails/webpacker</span><span class=\"dl\">'</span><span class=\"p\">)</span><span class=\"kd\">const</span> <span class=\"nx\">webpack</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">webpack</span><span class=\"dl\">'</span><span class=\"p\">)</span><span class=\"nx\">environment</span><span class=\"p\">.</span><span class=\"nx\">plugins</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Provide</span><span class=\"dl\">'</span><span class=\"p\">,</span>    <span class=\"k\">new</span> <span class=\"nx\">webpack</span><span class=\"p\">.</span><span class=\"nx\">ProvidePlugin</span><span class=\"p\">({</span>\t<span class=\"na\">$</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">jquery</span><span class=\"dl\">'</span><span class=\"p\">,</span>\t<span class=\"na\">jQuery</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">jquery</span><span class=\"dl\">'</span><span class=\"p\">,</span>\t<span class=\"na\">Popper</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">popper.js</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">default</span><span class=\"dl\">'</span><span class=\"p\">]</span>    <span class=\"p\">})</span><span class=\"p\">)</span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"nx\">environment</span></code></pre></div></div><p>Kemudian tambahkan juga skrip di bawah ini pada berkas <code class=\"highlighter-rouge\">app/javascript/packs/application.js</code> :</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">bootstrap</span><span class=\"dl\">'</span><span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">./src/application.scss</span><span class=\"dl\">'</span></code></pre></div></div><p>Selanjutnya buat direktori:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir </span>app/javascript/packs/src<span class=\"nv\">$ </span><span class=\"nb\">cd </span>app/javascript/packs/src</code></pre></div></div><p>Dan buat berkas di dalamnya bernama <code class=\"highlighter-rouge\">application.scss</code></p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">touch </span>application.scss<span class=\"nv\">$ </span>vim application.scss</code></pre></div></div><p>Kemudian isi dengan skrip di bawah ini:</p><div class=\"language-scss highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">@import</span> <span class=\"s1\">'~bootstrap/scss/bootstrap'</span><span class=\"p\">;</span></code></pre></div></div><p>Langkah terakhir:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rails assets:precompile<span class=\"nv\">$ </span>rails webpacker:compile</code></pre></div></div><p>Sekarang <code class=\"highlighter-rouge\">rails</code> kalian sudah terintegrasi dengan <code class=\"highlighter-rouge\">bootstrap</code></p>",
            "url": "http://localhost:4000/integrasi-bootstrap-di-rails-6-dengan-webpack",
            
            
            
            "tags": ["rails6","bootstrap","webpack"],
            
            "date_published": "2020-02-25T14:34:00+07:00",
            "date_modified": "2020-02-25T14:34:00+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/pasang-rails-5-di-termux",
            "title": "Install Rails 5.2.x in Termux",
            "summary": null,
            "content_text": "Hanya bermodal smartphone, kalian sudah bisa belajar pemrograman ruby. Kalian hanya perlu pasang Termux dari PlayStore, kemudian pasang rbenv di dalam Termux. Caranya sama seperti postingan sebelumnya.IntroKali ini saya ingin membagikan kepada kalian tentang bagaimana cara memasang Ruby on Rails di Termux Smartphone.Menurut pengalaman, kita tidak bisa memasang Rails terbaru, yakni Rails 6. Hanya bisa sampai di Rails 5. Untuk permasalahannya, saya sendiri belum tahu persis, yang jelas ketika di reproduce, terjadi error pada saat meng-compile gem sass. Jadi untuk sementara pakai versi 5.Kemudian untuk versi ruby yang dipakai. Hanya bisa sampai versi 2.5.x. Tidak pada versi 2.6.x atau lebih. Permasalah yang timbul pada ruby versi 2.6.x adalah gagalnya meng-compile bigint di Rails. Lagi-lagi saya juga tidak tahu kenapa. Wkwkwk suram memang.Kebutuhan deploySebelum memulai pastikan di Termux kalian sudah memasang kebutuhan deploy. Kalian tinggal pasang tools berikut:$ pkg install clang make libxml2 libxslt libffi libsqlite nodejs vimInstall Ruby 2.5.7Jangan pakai ruby 2.6.x atau lebih. Maksimal versi 2.5.x seperti yang saya jelaskan diintro di atas.$ rbenv install 2.5.7$ rbenv local 2.5.7$ ruby -vruby 2.5.7p206 (2019-10-01 revision 67816) [aarch64-linux]Pasang GemBeberapa gem ada yang menggunakan system library.$ gem install -N bundler$ gem install -N pkg-config$ gem install -N nokogiri -- --use-system-librariesPasang Rails 5.2.xDi Termux hanya versi rails 5.2.x yang dapat berjalan mulus. Versi 6 tidak bisa.$ gem install -N rails -v 5.2.4Buat Projek Rails$ rails new blog$ cd blog/$ vim GemfileTambahkan pada paling bawah Gemfile.gem 'tzinfo'gem 'tzinfo-data'Lalu jalankan$ bundle installTes ProjekUntuk memastikan rails sudah berjalan atau belum kalian bisa tes dengan perintah:$ rails sJika tidak terjadi error artinya semua instalasi sukses, dan kalian bisa buka projek rails kalian di browser.Selamat belajar.",
            "content_html": "<p>Hanya bermodal smartphone, kalian sudah bisa belajar pemrograman ruby. Kalian hanya perlu pasang Termux dari PlayStore, kemudian pasang <code class=\"highlighter-rouge\">rbenv</code> di dalam Termux. Caranya sama seperti postingan sebelumnya.</p><h2 id=\"intro\">Intro</h2><p>Kali ini saya ingin membagikan kepada kalian tentang bagaimana cara memasang Ruby on Rails di Termux Smartphone.</p><p>Menurut pengalaman, kita tidak bisa memasang Rails terbaru, yakni Rails 6. Hanya bisa sampai di Rails 5. Untuk permasalahannya, saya sendiri belum tahu persis, yang jelas ketika di reproduce, terjadi error pada saat meng-compile gem <code class=\"highlighter-rouge\">sass</code>. Jadi untuk sementara pakai versi 5.</p><p>Kemudian untuk versi ruby yang dipakai. Hanya bisa sampai versi 2.5.x. Tidak pada versi 2.6.x atau lebih. Permasalah yang timbul pada ruby versi 2.6.x adalah gagalnya meng-compile bigint di Rails. Lagi-lagi saya juga tidak tahu kenapa. Wkwkwk suram memang.</p><h2 id=\"kebutuhan-deploy\">Kebutuhan deploy</h2><p>Sebelum memulai pastikan di Termux kalian sudah memasang kebutuhan deploy. Kalian tinggal pasang tools berikut:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>pkg <span class=\"nb\">install </span>clang make libxml2 libxslt libffi libsqlite nodejs vim</code></pre></div></div><h2 id=\"install-ruby-257\">Install Ruby 2.5.7</h2><p>Jangan pakai ruby 2.6.x atau lebih. Maksimal versi 2.5.x seperti yang saya jelaskan diintro di atas.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rbenv <span class=\"nb\">install </span>2.5.7<span class=\"nv\">$ </span>rbenv <span class=\"nb\">local </span>2.5.7<span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span>ruby 2.5.7p206 <span class=\"o\">(</span>2019-10-01 revision 67816<span class=\"o\">)</span> <span class=\"o\">[</span>aarch64-linux]</code></pre></div></div><h2 id=\"pasang-gem\">Pasang Gem</h2><p>Beberapa gem ada yang menggunakan system library.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> bundler<span class=\"nv\">$ </span>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> pkg-config<span class=\"nv\">$ </span>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> nokogiri <span class=\"nt\">--</span> <span class=\"nt\">--use-system-libraries</span></code></pre></div></div><h2 id=\"pasang-rails-52x\">Pasang Rails 5.2.x</h2><p>Di Termux hanya versi rails 5.2.x yang dapat berjalan mulus. Versi 6 tidak bisa.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>gem <span class=\"nb\">install</span> <span class=\"nt\">-N</span> rails <span class=\"nt\">-v</span> 5.2.4</code></pre></div></div><h3 id=\"buat-projek-rails\">Buat Projek Rails</h3><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rails new blog<span class=\"nv\">$ </span><span class=\"nb\">cd </span>blog/<span class=\"nv\">$ </span>vim Gemfile</code></pre></div></div><p>Tambahkan pada paling bawah <code class=\"highlighter-rouge\">Gemfile</code>.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"s1\">'tzinfo'</span>gem <span class=\"s1\">'tzinfo-data'</span></code></pre></div></div><p>Lalu jalankan</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>bundle <span class=\"nb\">install</span></code></pre></div></div><h3 id=\"tes-projek\">Tes Projek</h3><p>Untuk memastikan rails sudah berjalan atau belum kalian bisa tes dengan perintah:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rails s</code></pre></div></div><p>Jika tidak terjadi error artinya semua instalasi sukses, dan kalian bisa buka projek rails kalian di browser.</p><p>Selamat belajar.</p>",
            "url": "http://localhost:4000/pasang-rails-5-di-termux",
            
            
            
            
            
            "date_published": "2020-02-22T21:47:37+07:00",
            "date_modified": "2020-02-22T21:47:37+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://localhost:4000/install-rbenv",
            "title": "Install Rbenv",
            "summary": null,
            "content_text": "Sebelum memulai belajar pemrograman ruby. Langkah pertama tentunya ialah memasang ruby di sistem operasi. Mungkin beberapa sistem operasi sudah terpasang secara asali (default). Contohnya pengguna macOS. Bagi yang belum ada kalian bisa pasang sesuai dengan sistem operasi yang kalian pergunakan.Untuk mengetahui kalian sudah memasang ruby atau belum, kalian bisa cek di Terminal Emulator dengan perintah berikut:$ ruby -vJika berhasil maka akan keluar informasi seperti ini:ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]Kalau tidak berarti kalian perlu memasangnya.Untuk memasang ruby, saya menyarankan kalian pergunakan rbenv mengapa? Karena untuk menyamakan versi ruby yang dipakai. Biasanya sistem operasi hanya menyediakan versi ruby tertentu, yang biasanya hanya pada versi ruby lawas. Sehingga ada beberapa method tidak terdapat dalam versi tersebut. Nah dengan rbenv inilah kalian dapat mengontrol versi ruby mana yang akan kalian pakai nantinya.Apa itu rbenv?Rbenv adalah suatu aplikasi yang memiliki tugas mengatur berbagai macam versi ruby dalam satu lingkungan sistem operasi. Dengan adanya rbenv memungkinkan kalian dapat memasang multi versi dari ruby tanpa harus khawatir bentrok dengan dependensi.Mengapa Perlu rbenv?Memaasang ruby dari bawaan manajer paket dari sistem operasi. Biasanya kita hanya akan mendapatkan versi stable-nya saja. Versi stable biasanya versi lawas. Memang bagus dengan versi stable. Akan tetapi, jika kalian memiliki rasa penasaran dengan versi teranyar karena ingin tahu beberapa perubahan maka disitulah gunanya rbenv.Cara Pasang rbenvSebelum memasang rbenv pastikan kalian sudah memasang git. Jika sudah, langsung saja:  Klon repositori rbenv dengan mengikuti perintah berikut:     $ git clone https://github.com/rbenv/rbenv.git ~/.rbenv            Set rbenv di $PATH variabel. Seperti berikut:    Bagi pengguna bash    $ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' &gt;&gt; ~/.bashrc        Bagi pengguna zsh    $ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' &gt;&gt; ~/.zshrc        Set up rbenv di shell kalian.    $ ~/.rbenv/bin/rbenv init        Maka akan keluar informasi berikut:     # Load rbenv automatically by appending # the following to ~/.bashrc: eval \"$(rbenv init -)\"        Nah, tinggal masukan eval \"$(rbenv init -)\" di .bashrc    Restart terminal kalian dengan cara tutup lalu buka kembali.  Pasang plugin ruby-build yang berguna untuk mengkompil kode sumber ruby.    $ mkdir -p \"$(rbenv root)\"/plugins$ git clone https://github.com/rbenv/ruby-build.git \"$(rbenv root)\"/plugins/ruby-build        Cek apakah kalian sudah benar memasang rbenv?    $ curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash        Outpunya:     Checking for `rbenv' in PATH: /home/ali/.rbenv/bin/rbenv Checking for rbenv shims in PATH: OK Checking `rbenv install' support: /home/ali/.rbenv/plugins/ruby-build/bin/rbenv-install (ruby-build 20200115-1-g4082f9e) Counting installed Ruby versions: none   There aren't any Ruby versions installed under `~/.rbenv/versions'.   You can install Ruby versions like so: rbenv install 2.2.4 Checking RubyGems settings: OK Auditing installed plugins: OK      Memasang RubyPemasangan rbenv sudah selesai langkah selanjutnya adalah kita pasang ruby. Adapun cara pasangnya sangatlah mudah, kalian hanya perlu melakukan perintah berikut:$ rbenv install 2.7.0Jika kalian ingin versi ruby yang lainnya, kalian bisa pasang dengan melihat versi yang kalian mau. Berikut caranya:$ rbenv install --listSet Ruby GlobalLangkah terakhir adalah menjadikan ruby yang tadi kita telah pasang dapat diakses di mana saja.$ rbenv global 2.7.0Untuk memastikan bisa kalian tes dengan perintah berikut:$ ruby -vruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]Set Ruby Local DirectoryJika kalian hanya ingin versi ruby lainnya di direktori tertentu. Contoh, saya punya 2 ruby versi 2.7.0 dan 2.6.5. Saya ingin di salah satu direktori projek saya menggunakan ruby 2.6.5 sedangkan yang lain tetap menggunakan ruby 2.7.0. Nah berikut caranya:$ cd /my/ruby/project/$ rbenv local 2.6.5$ ruby -vruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-linux]$ cd ~$ ruby -vruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]Lihat versi di direktori /my/ruby/project menggunakan versi 2.6.5 sedangkan versi globalnya menggunakan 2.7.0",
            "content_html": "<p>Sebelum memulai belajar pemrograman ruby. Langkah pertama tentunya ialah memasang ruby di sistem operasi. Mungkin beberapa sistem operasi sudah terpasang secara asali (default). Contohnya pengguna macOS. Bagi yang belum ada kalian bisa pasang sesuai dengan sistem operasi yang kalian pergunakan.</p><p>Untuk mengetahui kalian sudah memasang ruby atau belum, kalian bisa cek di Terminal Emulator dengan perintah berikut:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span></code></pre></div></div><p>Jika berhasil maka akan keluar informasi seperti ini:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ruby 2.7.0p0 <span class=\"o\">(</span>2019-12-25 revision 647ee6f091<span class=\"o\">)</span> <span class=\"o\">[</span>x86_64-linux]</code></pre></div></div><p>Kalau tidak berarti kalian perlu memasangnya.</p><p>Untuk memasang ruby, saya menyarankan kalian pergunakan <code class=\"highlighter-rouge\">rbenv</code> mengapa? Karena untuk menyamakan versi ruby yang dipakai. Biasanya sistem operasi hanya menyediakan versi ruby tertentu, yang biasanya hanya pada versi ruby lawas. Sehingga ada beberapa method tidak terdapat dalam versi tersebut. Nah dengan rbenv inilah kalian dapat mengontrol versi ruby mana yang akan kalian pakai nantinya.</p><h2 id=\"apa-itu-rbenv\">Apa itu rbenv?</h2><p>Rbenv adalah suatu aplikasi yang memiliki tugas mengatur berbagai macam versi ruby dalam satu lingkungan sistem operasi. Dengan adanya rbenv memungkinkan kalian dapat memasang multi versi dari ruby tanpa harus khawatir bentrok dengan dependensi.</p><h2 id=\"mengapa-perlu-rbenv\">Mengapa Perlu rbenv?</h2><p>Memaasang ruby dari bawaan manajer paket dari sistem operasi. Biasanya kita hanya akan mendapatkan versi stable-nya saja. Versi stable biasanya versi lawas. Memang bagus dengan versi stable. Akan tetapi, jika kalian memiliki rasa penasaran dengan versi teranyar karena ingin tahu beberapa perubahan maka disitulah gunanya rbenv.</p><h2 id=\"cara-pasang-rbenv\">Cara Pasang rbenv</h2><p>Sebelum memasang rbenv pastikan kalian sudah memasang <code class=\"highlighter-rouge\">git</code>. Jika sudah, langsung saja:</p><ol>  <li>Klon repositori rbenv dengan mengikuti perintah berikut:    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nv\">$ </span>git clone https://github.com/rbenv/rbenv.git ~/.rbenv</code></pre></div>    </div>  </li>  <li>    <p>Set rbenv di <code class=\"highlighter-rouge\">$PATH</code> variabel. Seperti berikut:</p>    <p>Bagi pengguna <strong>bash</strong></p>    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">echo</span> <span class=\"s1\">'export PATH=\"$HOME/.rbenv/bin:$PATH\"'</span> <span class=\"o\">&gt;&gt;</span> ~/.bashrc</code></pre></div>    </div>    <p>Bagi pengguna <strong>zsh</strong></p>    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">echo</span> <span class=\"s1\">'export PATH=\"$HOME/.rbenv/bin:$PATH\"'</span> <span class=\"o\">&gt;&gt;</span> ~/.zshrc</code></pre></div>    </div>  </li>  <li>Set up rbenv di shell kalian.    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>~/.rbenv/bin/rbenv init</code></pre></div>    </div>    <p>Maka akan keluar informasi berikut:</p>    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\"># Load rbenv automatically by appending</span> <span class=\"c\"># the following to ~/.bashrc:</span> <span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span>rbenv init -<span class=\"si\">)</span><span class=\"s2\">\"</span></code></pre></div>    </div>    <p>Nah, tinggal masukan <code class=\"highlighter-rouge\">eval \"$(rbenv init -)\"</code> di <code class=\"highlighter-rouge\">.bashrc</code></p>  </li>  <li>Restart terminal kalian dengan cara tutup lalu buka kembali.</li>  <li>Pasang plugin <code class=\"highlighter-rouge\">ruby-build</code> yang berguna untuk mengkompil kode sumber ruby.    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span>rbenv root<span class=\"si\">)</span><span class=\"s2\">\"</span>/plugins<span class=\"nv\">$ </span>git clone https://github.com/rbenv/ruby-build.git <span class=\"s2\">\"</span><span class=\"si\">$(</span>rbenv root<span class=\"si\">)</span><span class=\"s2\">\"</span>/plugins/ruby-build</code></pre></div>    </div>  </li>  <li>Cek apakah kalian sudah benar memasang rbenv?    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>curl <span class=\"nt\">-fsSL</span> https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash</code></pre></div>    </div>    <p>Outpunya:</p>    <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> Checking <span class=\"k\">for</span> <span class=\"sb\">`</span>rbenv<span class=\"s1\">' in PATH: /home/ali/.rbenv/bin/rbenv Checking for rbenv shims in PATH: OK Checking `rbenv install'</span> support: /home/ali/.rbenv/plugins/ruby-build/bin/rbenv-install <span class=\"o\">(</span>ruby-build 20200115-1-g4082f9e<span class=\"o\">)</span> Counting installed Ruby versions: none   There aren<span class=\"s1\">'t any Ruby versions installed under `~/.rbenv/versions'</span><span class=\"nb\">.</span>   You can <span class=\"nb\">install </span>Ruby versions like so: rbenv <span class=\"nb\">install </span>2.2.4 Checking RubyGems settings: OK Auditing installed plugins: OK</code></pre></div>    </div>  </li></ol><h2 id=\"memasang-ruby\">Memasang Ruby</h2><p>Pemasangan rbenv sudah selesai langkah selanjutnya adalah kita pasang ruby. Adapun cara pasangnya sangatlah mudah, kalian hanya perlu melakukan perintah berikut:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rbenv <span class=\"nb\">install </span>2.7.0</code></pre></div></div><p>Jika kalian ingin versi ruby yang lainnya, kalian bisa pasang dengan melihat versi yang kalian mau. Berikut caranya:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rbenv <span class=\"nb\">install</span> <span class=\"nt\">--list</span></code></pre></div></div><h2 id=\"set-ruby-global\">Set Ruby Global</h2><p>Langkah terakhir adalah menjadikan ruby yang tadi kita telah pasang dapat diakses di mana saja.</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>rbenv global 2.7.0</code></pre></div></div><p>Untuk memastikan bisa kalian tes dengan perintah berikut:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span>ruby 2.7.0p0 <span class=\"o\">(</span>2019-12-25 revision 647ee6f091<span class=\"o\">)</span> <span class=\"o\">[</span>x86_64-linux]</code></pre></div></div><h2 id=\"set-ruby-local-directory\">Set Ruby Local Directory</h2><p>Jika kalian hanya ingin versi ruby lainnya di direktori tertentu. Contoh, saya punya 2 ruby versi 2.7.0 dan 2.6.5. Saya ingin di salah satu direktori projek saya menggunakan ruby 2.6.5 sedangkan yang lain tetap menggunakan ruby 2.7.0. Nah berikut caranya:</p><div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">cd</span> /my/ruby/project/<span class=\"nv\">$ </span>rbenv <span class=\"nb\">local </span>2.6.5<span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span>ruby 2.6.5p114 <span class=\"o\">(</span>2019-10-01 revision 67812<span class=\"o\">)</span> <span class=\"o\">[</span>x86_64-linux]<span class=\"nv\">$ </span><span class=\"nb\">cd</span> ~<span class=\"nv\">$ </span>ruby <span class=\"nt\">-v</span>ruby 2.7.0p0 <span class=\"o\">(</span>2019-12-25 revision 647ee6f091<span class=\"o\">)</span> <span class=\"o\">[</span>x86_64-linux]</code></pre></div></div><p>Lihat versi di direktori <code class=\"highlighter-rouge\">/my/ruby/project</code> menggunakan versi 2.6.5 sedangkan versi globalnya menggunakan 2.7.0</p>",
            "url": "http://localhost:4000/install-rbenv",
            
            
            
            
            
            "date_published": "2020-01-31T21:47:37+07:00",
            "date_modified": "2020-01-31T21:47:37+07:00",
            
                "author":  {
                "name": "Ali",
                "url": "www.situsali.id",
                "avatar": null
                }
                
            
        }
    
    ]
}